,property,value,description
0,hadoop.http.idle_timeout.ms,60000,NN/JN/DN Server connection timeout in milliseconds.
1,hadoop.security.dns.log-slow-lookups.threshold.ms,1000,"If slow lookup logging is enabled, this threshold is used to decide if a
    lookup is considered slow enough to be logged."
2,hadoop.security.groups.cache.secs,300,"This is the config controlling the validity of the entries in the cache
    containing the user->group mapping. When this duration has expired,
    then the implementation of the group mapping provider is invoked to get
    the groups of the user and then cached back."
3,hadoop.security.groups.negative-cache.secs,30,"Expiration time for entries in the the negative user-to-group mapping
    caching, in seconds. This is useful when invalid users are retrying
    frequently. It is suggested to set a small value for this expiration, since
    a transient error in group lookup could temporarily lock out a legitimate
    user.

    Set this to zero or negative value to disable negative user-to-group caching."
4,hadoop.security.groups.cache.warn.after.ms,5000,"If looking up a single user to group takes longer than this amount of
    milliseconds, we will log a warning message."
5,hadoop.security.groups.cache.background.reload.threads,3,"Only relevant if hadoop.security.groups.cache.background.reload is true.
    Controls the number of concurrent background user->group cache entry
    refreshes. Pending refresh requests beyond this value are queued and
    processed when a thread is free."
6,hadoop.security.group.mapping.ldap.connection.timeout.ms,60000,"This property is the connection timeout (in milliseconds) for LDAP
    operations. If the LDAP provider doesn't establish a connection within the
    specified period, it will abort the connect attempt. Non-positive value
    means no LDAP connection timeout is specified in which case it waits for the
    connection to establish until the underlying network times out."
7,hadoop.security.group.mapping.ldap.read.timeout.ms,60000,"This property is the read timeout (in milliseconds) for LDAP
    operations. If the LDAP provider doesn't get a LDAP response within the
    specified period, it will abort the read attempt. Non-positive value
    means no read timeout is specified in which case it waits for the response
    infinitely."
8,hadoop.security.group.mapping.ldap.num.attempts,3,"This property is the number of attempts to be made for LDAP operations.
    If this limit is exceeded, LdapGroupsMapping will return an empty
    group list."
9,hadoop.security.group.mapping.ldap.num.attempts.before.failover,3,"This property is the number of attempts to be made for LDAP operations
    using a single LDAP instance. If multiple LDAP servers are configured
    and this number of failed operations is reached, we will switch to the
    next LDAP server. The configuration for the overall number of attempts
    will still be respected, failover will thus be performed only if this
    property is less than hadoop.security.group.mapping.ldap.num.attempts."
10,hadoop.security.group.mapping.ldap.search.group.hierarchy.levels,0,"The number of levels to go up the group hierarchy when determining
    which groups a user is part of. 0 Will represent checking just the
    group that the user belongs to.  Each additional level will raise the
    time it takes to execute a query by at most
    hadoop.security.group.mapping.ldap.directory.search.timeout.
    The default will usually be appropriate for all LDAP systems."
11,hadoop.security.group.mapping.ldap.directory.search.timeout,10000,"The attribute applied to the LDAP SearchControl properties to set a
    maximum time limit when searching and awaiting a result.
    Set to 0 if infinite wait period is desired.
    Default is 10 seconds. Units in milliseconds."
12,hadoop.security.uid.cache.secs,14400,"This is the config controlling the validity of the entries in the cache
        containing the userId to userName and groupId to groupName used by
        NativeIO getFstat()."
13,hadoop.kerberos.min.seconds.before.relogin,60,"The minimum time between relogin attempts for Kerberos, in
    seconds."
14,io.file.buffer.size,4096,"The size of buffer for use in sequence files.
  The size of this buffer should probably be a multiple of hardware
  page size (4096 on Intel x86), and it determines how much data is
  buffered during read and write operations."
15,io.bytes.per.checksum,512,"The number of bytes per checksum.  Must not be larger than
  io.file.buffer.size."
16,io.map.index.skip,0,"Number of index entries to skip between each entry.
  Zero by default. Setting this to values larger than zero can
  facilitate opening large MapFiles using less memory."
17,io.map.index.interval,128,"MapFile consist of two files - data file (tuples) and index file
    (keys). For every io.map.index.interval records written in the
    data file, an entry (record-key, data-file-position) is written
    in the index file. This is to allow for doing binary search later
    within the index file to look up records by their keys and get their
    closest positions in the data file."
18,fs.trash.interval,0,"Number of minutes after which the checkpoint
  gets deleted.  If zero, the trash feature is disabled.
  This option may be configured both on the server and the
  client. If trash is disabled server side then the client
  side configuration is checked. If trash is enabled on the
  server side then the value configured on the server is
  used and the client configuration value is ignored."
19,fs.trash.checkpoint.interval,0,"Number of minutes between trash checkpoints.
  Should be smaller or equal to fs.trash.interval. If zero,
  the value is set to the value of fs.trash.interval.
  Every time the checkpointer runs it creates a new checkpoint
  out of current and removes checkpoints created more than
  fs.trash.interval minutes ago."
20,fs.ftp.host.port,21,FTP filesystem connects to fs.ftp.host on this port
21,fs.ftp.timeout,0,FTP filesystem's timeout in seconds.
22,fs.df.interval,60000,Disk usage statistics refresh interval in msec.
23,fs.du.interval,600000,File space usage statistics refresh interval in msec.
24,fs.s3a.connection.maximum,96,"Controls the maximum number of simultaneous connections to S3.
    This must be bigger than the value of fs.s3a.threads.max so as to stop
    threads being blocked waiting for new HTTPS connections.
    Why not equal? The AWS SDK transfer manager also uses these connections."
25,fs.s3a.attempts.maximum,20,How many times we should retry commands on transient errors.
26,fs.s3a.connection.establish.timeout,5000,Socket connection setup timeout in milliseconds.
27,fs.s3a.connection.timeout,200000,Socket connection timeout in milliseconds.
28,fs.s3a.socket.send.buffer,8192,Socket send buffer hint to amazon connector. Represented in bytes.
29,fs.s3a.socket.recv.buffer,8192,Socket receive buffer hint to amazon connector. Represented in bytes.
30,fs.s3a.paging.maximum,5000,"How many keys to request from S3 when doing
     directory listings at a time."
31,fs.s3a.threads.max,64,"The total number of threads available in the filesystem for data
    uploads *or any other queued filesystem operation*."
32,fs.s3a.threads.keepalivetime,60,"Number of seconds a thread can be idle before being
    terminated."
33,fs.s3a.max.total.tasks,32,"The number of operations which can be queued for execution.
  This is in addition to the number of active threads in fs.s3a.threads.max."
34,fs.s3a.executor.capacity,16,"The maximum number of submitted tasks which is a single
    operation (e.g. rename(), delete()) may submit simultaneously for
    execution -excluding the IO-heavy block uploads, whose capacity
    is set in ""fs.s3a.fast.upload.active.blocks""

    All tasks are submitted to the shared thread pool whose size is
    set in ""fs.s3a.threads.max""; the value of capacity should be less than that
    of the thread pool itself, as the goal is to stop a single operation
    from overloading that thread pool."
35,fs.s3a.multipart.purge.age,86400,"Minimum age in seconds of multipart uploads to purge
    on startup if ""fs.s3a.multipart.purge"" is true"
36,fs.s3a.fast.upload.active.blocks,4,"Maximum Number of blocks a single output stream can have
    active (uploading, or queued to the central FileSystem
    instance's pool of queued operations.

    This stops a single stream overloading the shared thread pool."
37,fs.s3a.retry.limit,7,"Number of times to retry any repeatable S3 client request on failure,
    excluding throttling requests."
38,fs.s3a.retry.throttle.limit,20,Number of times to retry any throttled request.
39,fs.s3a.committer.threads,8,"Number of threads in committers for parallel operations on files
    (upload, commit, abort, delete...)"
40,fs.s3a.list.version,2,"Select which version of the S3 SDK's List Objects API to use.  Currently
    support 2 (default) and 1 (older API)."
41,fs.s3a.connection.request.timeout,0,"Time out on HTTP requests to the AWS service; 0 means no timeout.
    Measured in seconds; the usual time suffixes are all supported

    Important: this is the maximum duration of any AWS service call,
    including upload and copy operations. If non-zero, it must be larger
    than the time to upload multi-megabyte blocks to S3 from the client,
    and to rename many-GB files. Use with care.

    Values that are larger than Integer.MAX_VALUE milliseconds are
    converged to Integer.MAX_VALUE milliseconds"
42,io.seqfile.compress.blocksize,1000000,"The minimum block size for compression in block compressed
          SequenceFiles."
43,io.mapfile.bloom.size,1048576,"The size of BloomFilter-s used in BloomMapFile. Each time this many
  keys is appended the next BloomFilter will be created (inside a DynamicBloomFilter).
  Larger values minimize the number of filters, which slightly increases the performance,
  but may waste too much space if the total number of keys is usually much smaller
  than this number."
44,ipc.client.idlethreshold,4000,"Defines the threshold number of connections after which
               connections will be inspected for idleness."
45,ipc.client.kill.max,10,Defines the maximum number of clients to disconnect in one go.
46,ipc.client.connection.maxidletime,10000,"The maximum time in msec after which a client will bring down the
               connection to the server."
47,ipc.client.connect.max.retries,10,"Indicates the number of retries a client will make to establish
               a server connection."
48,ipc.client.connect.retry.interval,1000,"Indicates the number of milliseconds a client will wait for
    before retrying to establish a server connection."
49,ipc.client.connect.timeout,20000,"Indicates the number of milliseconds a client will wait for the
               socket to establish a server connection."
50,ipc.client.connect.max.retries.on.timeouts,45,"Indicates the number of retries a client will make on socket timeout
               to establish a server connection."
51,ipc.ping.interval,60000,"Timeout on waiting response from server, in milliseconds.
  The client will send ping when the interval is passed without receiving bytes,
  if ipc.client.ping is set to true."
52,ipc.client.rpc-timeout.ms,0,"Timeout on waiting response from server, in milliseconds.
  If ipc.client.ping is set to true and this rpc-timeout is greater than
  the value of ipc.ping.interval, the effective value of the rpc-timeout is
  rounded up to multiple of ipc.ping.interval."
53,ipc.server.listen.queue.size,256,"Indicates the length of the listen queue for servers accepting
               client connections."
54,ipc.server.purge.interval,15,"Define how often calls are cleaned up in the server.
    The default is 15 minutes. The unit is minutes."
55,ipc.maximum.data.length,134217728,"This indicates the maximum IPC message length (bytes) that can be
    accepted by the server. Messages larger than this value are rejected by the
    immediately to avoid possible OOMs. This setting should rarely need to be
    changed."
56,ipc.maximum.response.length,134217728,"This indicates the maximum IPC message length (bytes) that can be
    accepted by the client. Messages larger than this value are rejected
    immediately to avoid possible OOMs. This setting should rarely need to be
    changed.  Set to 0 to disable."
57,ipc.[port_number].scheduler.priority.levels,4,"How many priority levels to use within the scheduler and call
    queue. This property applies to RpcScheduler and CallQueue."
58,ipc.[port_number].decay-scheduler.period-ms,5000,"How frequently the decay factor should be applied to the
    operation counts of users. Higher values have less overhead, but respond
    less quickly to changes in client behavior.
    This property applies to DecayRpcScheduler."
59,ipc.[port_number].decay-scheduler.metrics.top.user.count,10,"The number of top (i.e., heaviest) users to emit metric
    information about. This property applies to DecayRpcScheduler."
60,ipc.[port_number].weighted-cost.lockshared,10,"The weight multiplier to apply to the time spent in the
    processing phase which holds a shared (read) lock.
    This property applies to WeightedTimeCostProvider."
61,ipc.[port_number].weighted-cost.lockexclusive,100,"The weight multiplier to apply to the time spent in the
    processing phase which holds an exclusive (write) lock.
    This property applies to WeightedTimeCostProvider."
62,ipc.[port_number].weighted-cost.handler,1,"The weight multiplier to apply to the time spent in the
    HANDLER phase which do not involve holding a lock.
    See org.apache.hadoop.ipc.ProcessingDetails.Timing for more details on
    this phase. This property applies to WeightedTimeCostProvider."
63,ipc.[port_number].weighted-cost.lockfree,1,"The weight multiplier to apply to the time spent in the
    LOCKFREE phase which do not involve holding a lock.
    See org.apache.hadoop.ipc.ProcessingDetails.Timing for more details on
    this phase. This property applies to WeightedTimeCostProvider."
64,ipc.[port_number].weighted-cost.response,1,"The weight multiplier to apply to the time spent in the
    RESPONSE phase which do not involve holding a lock.
    See org.apache.hadoop.ipc.ProcessingDetails.Timing for more details on
    this phase. This property applies to WeightedTimeCostProvider."
65,net.topology.script.number.args,100,"The max number of args that the script configured with
    net.topology.script.file.name should be run with. Each arg is an
    IP address."
66,file.stream-buffer-size,4096,"The size of buffer to stream files.
  The size of this buffer should probably be a multiple of hardware
  page size (4096 on Intel x86), and it determines how much data is
  buffered during read and write operations."
67,file.bytes-per-checksum,512,"The number of bytes per checksum.  Must not be larger than
  file.stream-buffer-size"
68,file.client-write-packet-size,65536,Packet size for clients to write
69,file.blocksize,67108864,Block size
70,file.replication,1,Replication factor
71,ftp.stream-buffer-size,4096,"The size of buffer to stream files.
  The size of this buffer should probably be a multiple of hardware
  page size (4096 on Intel x86), and it determines how much data is
  buffered during read and write operations."
72,ftp.bytes-per-checksum,512,"The number of bytes per checksum.  Must not be larger than
  ftp.stream-buffer-size"
73,ftp.client-write-packet-size,65536,Packet size for clients to write
74,ftp.blocksize,67108864,Block size
75,ftp.replication,3,Replication factor
76,tfile.io.chunk.size,1048576,"Value chunk size in bytes. Default  to
    1MB. Values of the length less than the chunk size is
    guaranteed to have known value length in read time (See also
    TFile.Reader.Scanner.Entry.isValueLengthKnown())."
77,tfile.fs.output.buffer.size,262144,Buffer size used for FSDataOutputStream in bytes.
78,tfile.fs.input.buffer.size,262144,Buffer size used for FSDataInputStream in bytes.
79,hadoop.http.authentication.token.validity,36000,"Indicates how long (in seconds) an authentication token is valid before it has
    to be renewed."
80,hadoop.http.cross-origin.max-age,1800,"The number of seconds a pre-flighted request can be cached
    for web services needing cross-origin (CORS) support."
81,dfs.ha.fencing.ssh.connect-timeout,30000,"SSH connection timeout, in milliseconds, to use with the builtin
    sshfence fencer."
82,ha.zookeeper.session-timeout.ms,10000,"The session timeout to use when the ZKFC connects to ZooKeeper.
    Setting this value to a lower value implies that server crashes
    will be detected more quickly, but risks triggering failover too
    aggressively in the case of a transient error or network blip."
83,fs.permissions.umask-mode,022,"The umask used when creating files and directories.
    Can be in octal or in symbolic. Examples are:
    ""022"" (octal for u=rwx,g=r-x,o=r-x in symbolic),
    or ""u=rwx,g=rwx,o="" (symbolic for 007 in octal)."
84,ha.health-monitor.connect-retry-interval.ms,1000,How often to retry connecting to the service.
85,ha.health-monitor.check-interval.ms,1000,How often to check the service.
86,ha.health-monitor.sleep-after-disconnect.ms,1000,How long to sleep after an unexpected RPC error.
87,ha.health-monitor.rpc.connect.max.retries,1,"The number of retries on connect error when establishing RPC proxy
    connection to NameNode, used for monitorHealth() calls."
88,ha.health-monitor.rpc-timeout.ms,45000,Timeout for the actual monitorHealth() calls.
89,ha.failover-controller.new-active.rpc-timeout.ms,60000,Timeout that the FC waits for the new active to become active
90,ha.failover-controller.graceful-fence.rpc-timeout.ms,5000,Timeout that the FC waits for the old active to go to standby
91,ha.failover-controller.graceful-fence.connection.retries,1,FC connection retries for graceful fencing
92,ha.failover-controller.active-standby-elector.zk.op.retries,3,The number of zookeeper operation retry times in ActiveStandbyElector
93,ha.failover-controller.cli-check.rpc-timeout.ms,20000,"Timeout that the CLI (manual) FC waits for monitorHealth, getServiceState"
94,hadoop.security.crypto.buffer.size,8192,The buffer size used by CryptoInputStream and CryptoOutputStream.
95,hadoop.security.key.default.bitlength,128,"The length (bits) of keys we want the KeyProvider to produce. Key length
    defines the upper-bound on an algorithm's security, ideally, it would
    coincide with the lower-bound on an algorithm's security."
96,hadoop.security.kms.client.authentication.retry-count,1,Number of time to retry connecting to KMS on authentication failure
97,hadoop.security.kms.client.encrypted.key.cache.size,500,Size of the EncryptedKeyVersion cache Queue for each key
98,hadoop.security.kms.client.encrypted.key.cache.num.refill.threads,2,"Number of threads to use for refilling depleted EncryptedKeyVersion
    cache Queues"
99,hadoop.security.kms.client.encrypted.key.cache.expiry,43200000,"Cache expiry time for a Key, after which the cache Queue for this
    key will be dropped. Default = 12hrs"
100,hadoop.security.kms.client.timeout,60,"Sets value for KMS client connection timeout, and the read timeout
    to KMS servers."
101,hadoop.security.kms.client.failover.sleep.base.millis,100,"Expert only. The time to wait, in milliseconds, between failover
    attempts increases exponentially as a function of the number of
    attempts made so far, with a random factor of +/- 50%. This option
    specifies the base value used in the failover calculation. The
    first failover will retry immediately. The 2nd failover attempt
    will delay at least hadoop.security.client.failover.sleep.base.millis
    milliseconds. And so on."
102,hadoop.security.kms.client.failover.sleep.max.millis,2000,"Expert only. The time to wait, in milliseconds, between failover
    attempts increases exponentially as a function of the number of
    attempts made so far, with a random factor of +/- 50%. This option
    specifies the maximum value to wait between failovers.
    Specifically, the time between two failover attempts will not
    exceed +/- 50% of hadoop.security.client.failover.sleep.max.millis
    milliseconds."
103,ipc.server.max.connections,0,"The maximum number of concurrent connections a server is allowed
    to accept. If this limit is exceeded, incoming connections will first fill
    the listen queue and then may go to an OS-specific listen overflow queue.
    The client may fail or timeout, but the server can avoid running out of file
    descriptors using this feature. 0 means no limit."
104,hadoop.registry.zk.session.timeout.ms,60000,Zookeeper session timeout in milliseconds
105,hadoop.registry.zk.connection.timeout.ms,15000,Zookeeper connection timeout in milliseconds
106,hadoop.registry.zk.retry.times,5,Zookeeper connection retry count before failing
107,hadoop.registry.zk.retry.interval.ms,1000,
108,hadoop.registry.zk.retry.ceiling.ms,60000,"Zookeeper retry limit in milliseconds, during
      exponential backoff.

      This places a limit even
      if the retry times and interval limit, combined
      with the backoff policy, result in a long retry
      period"
109,hadoop.shell.safely.delete.limit.num.files,100,"Used by -safely option of hadoop fs shell -rm command to avoid
      accidental deletion of large directories. When enabled, the -rm command
      requires confirmation if the number of files to be deleted is greater than
      this limit.  The default limit is 100 files. The warning is disabled if
      the limit is 0 or the -safely is not specified in -rm command."
110,hadoop.caller.context.max.size,128,"The maximum bytes a caller context string can have. If the
      passed caller context is longer than this maximum bytes, client will
      truncate it before sending to server. Note that the server may have a
      different maximum size, and will truncate the caller context to the
      maximum size it allows."
111,hadoop.caller.context.signature.max.size,40,"The caller's signature (optional) is for offline validation. If the
      signature exceeds the maximum allowed bytes in server, the caller context
      will be abandoned, in which case the caller context will not be recorded
      in audit logs."
112,seq.io.sort.mb,100,"The total amount of buffer memory to use while sorting files,
      while using SequenceFile.Sorter, in megabytes. By default,
      gives each merge stream 1MB, which should minimize seeks."
113,seq.io.sort.factor,100,"The number of streams to merge at once while sorting
      files using SequenceFile.Sorter.
      This determines the number of open file handles."
114,hadoop.zk.num-retries,1000,Number of tries to connect to ZooKeeper.
115,hadoop.zk.retry-interval-ms,1000,Retry interval in milliseconds when connecting to ZooKeeper.
116,hadoop.zk.timeout-ms,10000,"ZooKeeper session timeout in milliseconds. Session expiration
    is managed by the ZooKeeper cluster itself, not by the client. This value is
    used by the cluster to determine when the client's session expires.
    Expirations happens when the cluster does not hear from the client within
    the specified session timeout period (i.e. no heartbeat)."
117,fs.getspaceused.jitterMillis,60000,fs space usage statistics refresh jitter in msec.
118,hadoop.hdfs.configuration.version,1,version of this configuration file
119,dfs.datanode.http.internal-proxy.port,0,"The datanode's internal web proxy port.
    By default it selects a random port available in runtime."
120,dfs.datanode.handler.count,10,The number of server threads for the datanode.
121,dfs.namenode.heartbeat.recheck-interval,300000,"This time decides the interval to check for expired datanodes.
    With this value and dfs.heartbeat.interval, the interval of
    deciding the datanode is stale or not is also calculated.
    The unit of this configuration is millisecond."
122,dfs.client.cached.conn.retry,3,"The number of times the HDFS client will pull a socket from the
   cache.  Once this number is exceeded, the client will try to create a new
   socket."
123,dfs.default.chunk.view.size,32768,The number of bytes to view for a file on the browser.
124,dfs.datanode.du.reserved,0,"Reserved space in bytes per volume. Always leave this much space free for non dfs use.
      Specific storage type based reservation is also supported. The property can be followed with
      corresponding storage types ([ssd]/[disk]/[archive]/[ram_disk]) for cluster with heterogeneous storage.
      For example, reserved space for RAM_DISK storage can be configured using property
      'dfs.datanode.du.reserved.ram_disk'. If specific storage type reservation is not configured
      then dfs.datanode.du.reserved will be used. Support multiple size unit suffix(case insensitive),
      as described in dfs.blocksize.
      Note: In case of using tune2fs to set reserved-blocks-percentage, or other filesystem tools,
      then you can possibly run into out of disk errors because hadoop will not check those
      external tool configurations."
125,dfs.datanode.du.reserved.pct,0,"Reserved space in percentage. Read dfs.datanode.du.reserved.calculator to see
    when this takes effect. The actual number of bytes reserved will be calculated by using the
    total capacity of the data directory in question. Specific storage type based reservation
    is also supported. The property can be followed with corresponding storage types
    ([ssd]/[disk]/[archive]/[ram_disk]) for cluster with heterogeneous storage.
    For example, reserved percentage space for RAM_DISK storage can be configured using property
    'dfs.datanode.du.reserved.pct.ram_disk'. If specific storage type reservation is not configured
    then dfs.datanode.du.reserved.pct will be used."
126,dfs.namenode.fs-limits.max-component-length,255,"Defines the maximum number of bytes in UTF-8 encoding in each
      component of a path.  A value of 0 will disable the check. Support
      multiple size unit suffix(case insensitive), as described in dfs.blocksize."
127,dfs.namenode.fs-limits.max-directory-items,1048576,"Defines the maximum number of items that a directory may
      contain. Cannot set the property to a value less than 1 or more than
      6400000."
128,dfs.namenode.fs-limits.min-block-size,1048576,"Minimum block size in bytes, enforced by the Namenode at create
      time. This prevents the accidental creation of files with tiny block
      sizes (and thus many blocks), which can degrade performance. Support multiple
      size unit suffix(case insensitive), as described in dfs.blocksize."
129,dfs.namenode.fs-limits.max-blocks-per-file,10000,"Maximum number of blocks per file, enforced by the Namenode on
        write. This prevents the creation of extremely large files which can
        degrade performance."
130,dfs.namenode.lazypersist.file.scrub.interval.sec,300,"The NameNode periodically scans the namespace for LazyPersist files with
    missing blocks and unlinks them from the namespace. This configuration key
    controls the interval between successive scans. If this value is set to 0,
    the file scrubber is disabled."
131,dfs.block.access.key.update.interval,600,Interval in minutes at which namenode updates its access keys.
132,dfs.block.access.token.lifetime,600,The lifetime of access tokens in minutes.
133,dfs.datanode.data.dir.perm,700,"Permissions for the directories on on the local filesystem where
  the DFS data node store its blocks. The permissions can either be octal or
  symbolic."
134,dfs.replication,3,"Default block replication. 
  The actual number of replications can be specified when the file is created.
  The default is used if replication is not specified in create time."
135,dfs.replication.max,512,Maximal block replication.
136,dfs.namenode.replication.min,1,Minimal block replication.
137,dfs.namenode.maintenance.replication.min,1,Minimal live block replication in existence of maintenance mode.
138,dfs.namenode.max-corrupt-file-blocks-returned,100,"The maximum number of corrupt file blocks listed by NameNode Web UI,
      JMX and other client request."
139,dfs.blocksize,134217728,"The default block size for new files, in bytes.
      You can use the following suffix (case insensitive):
      k(kilo), m(mega), g(giga), t(tera), p(peta), e(exa) to specify the size (such as 128k, 512m, 1g, etc.),
      Or provide complete size in bytes (such as 134217728 for 128 MB)."
140,dfs.client.block.write.retries,3,"The number of retries for writing blocks to the data nodes, 
  before we signal failure to the application."
141,dfs.client.block.write.replace-datanode-on-failure.min-replication,0,"The minimum number of replications that are needed to not to fail
      the write pipeline if new datanodes can not be found to replace
      failed datanodes (could be due to network failure) in the write pipeline.
      If the number of the remaining datanodes in the write pipeline is greater
      than or equal to this property value, continue writing to the remaining nodes.
      Otherwise throw exception.

      If this is set to 0, an exception will be thrown, when a replacement
      can not be found.
      See also dfs.client.block.write.replace-datanode-on-failure.policy"
142,dfs.blockreport.intervalMsec,21600000,Determines block reporting interval in milliseconds.
143,dfs.blockreport.initialDelay,0,"Delay for first block report in seconds. Support multiple time unit
    suffix(case insensitive), as described in dfs.heartbeat.interval.If
    no time unit is specified then seconds is assumed"
144,dfs.blockreport.split.threshold,1000000,"If the number of blocks on the DataNode is below this
    threshold then it will send block reports for all Storage Directories
    in a single message.

    If the number of blocks exceeds this threshold then the DataNode will
    send block reports for each Storage Directory in separate messages.

    Set to zero to always split."
145,dfs.namenode.max.full.block.report.leases,6,"The maximum number of leases for full block reports that the
    NameNode will issue at any given time.  This prevents the NameNode from
    being flooded with full block reports that use up all the RPC handler
    threads.  This number should never be more than the number of RPC handler
    threads or less than 1."
146,dfs.namenode.full.block.report.lease.length.ms,300000,"The number of milliseconds that the NameNode will wait before invalidating
    a full block report lease.  This prevents a crashed DataNode from
    permanently using up a full block report lease."
147,dfs.datanode.directoryscan.interval,21600,"Interval in seconds for Datanode to scan data directories and
  reconcile the difference between blocks in memory and on the disk.
  Support multiple time unit suffix(case insensitive), as described
  in dfs.heartbeat.interval.If no time unit is specified then seconds
  is assumed."
148,dfs.datanode.directoryscan.threads,1,"How many threads should the threadpool used to compile reports
  for volumes in parallel have."
149,dfs.datanode.directoryscan.throttle.limit.ms.per.sec,1000,"The report compilation threads are limited to only running for
  a given number of milliseconds per second, as configured by the
  property. The limit is taken per thread, not in aggregate, e.g. setting
  a limit of 100ms for 4 compiler threads will result in each thread being
  limited to 100ms, not 25ms.

  Note that the throttle does not interrupt the report compiler threads, so the
  actual running time of the threads per second will typically be somewhat
  higher than the throttle limit, usually by no more than 20%.

  Setting this limit to 1000 disables compiler thread throttling. Only
  values between 1 and 1000 are valid. Setting an invalid value will result
  in the throttle being disabled and an error message being logged. 1000 is
  the default setting."
150,dfs.heartbeat.interval,3,"Determines datanode heartbeat interval in seconds.
    Can use the following suffix (case insensitive):
    ms(millis), s(sec), m(min), h(hour), d(day)
    to specify the time (such as 2s, 2m, 1h, etc.).
    Or provide complete number in seconds (such as 30 for 30 seconds).
    If no time unit is specified then seconds is assumed."
151,dfs.namenode.handler.count,10,"The number of Namenode RPC server threads that listen to
  requests from clients.
  If dfs.namenode.servicerpc-address is not configured then
  Namenode RPC server threads listen to requests from all nodes."
152,dfs.namenode.service.handler.count,10,"The number of Namenode RPC server threads that listen to
  requests from DataNodes and from all other non-client nodes.
  dfs.namenode.service.handler.count will be valid only if
  dfs.namenode.servicerpc-address is configured."
153,dfs.namenode.safemode.min.datanodes,0,"Specifies the number of datanodes that must be considered alive
    before the name node exits safemode.
    Values less than or equal to 0 mean not to take the number of live
    datanodes into account when deciding whether to remain in safe mode
    during startup.
    Values greater than the number of datanodes in the cluster
    will make safe mode permanent."
154,dfs.namenode.safemode.extension,30000,"Determines extension of safe mode in milliseconds after the threshold level
    is reached.  Support multiple time unit suffix (case insensitive), as
    described in dfs.heartbeat.interval."
155,dfs.namenode.resource.check.interval,5000,"The interval in milliseconds at which the NameNode resource checker runs.
    The checker calculates the number of the NameNode storage volumes whose
    available spaces are more than dfs.namenode.resource.du.reserved, and
    enters safemode if the number becomes lower than the minimum value
    specified by dfs.namenode.resource.checked.volumes.minimum."
156,dfs.namenode.resource.du.reserved,104857600,"The amount of space to reserve/require for a NameNode storage directory
    in bytes. The default is 100MB. Support multiple size unit
    suffix(case insensitive), as described in dfs.blocksize."
157,dfs.namenode.resource.checked.volumes.minimum,1,The minimum number of redundant NameNode storage volumes required.
158,dfs.namenode.max.objects,0,"The maximum number of files, directories and blocks
  dfs supports. A value of zero indicates no limit to the number
  of objects that dfs supports."
159,dfs.namenode.decommission.interval,30,"Namenode periodicity in seconds to check if
    decommission or maintenance is complete. Support multiple time unit
    suffix(case insensitive), as described in dfs.heartbeat.interval.
    If no time unit is specified then seconds is assumed."
160,dfs.namenode.decommission.blocks.per.interval,500000,"The approximate number of blocks to process per decommission
    or maintenance interval, as defined in dfs.namenode.decommission.interval."
161,dfs.namenode.decommission.max.concurrent.tracked.nodes,100,"The maximum number of decommission-in-progress or
    entering-maintenance datanodes nodes that will be tracked at one time by
    the namenode. Tracking these datanode consumes additional NN memory
    proportional to the number of blocks on the datnode. Having a conservative
    limit reduces the potential impact of decommissioning or maintenance of
    a large number of nodes at once.
      
    A value of 0 means no limit will be enforced."
162,dfs.namenode.decommission.backoff.monitor.pending.limit,10000,"When the Backoff monitor is enabled, determines the maximum number of blocks
    related to decommission and maintenance operations that can be loaded
    into the replication queue at any given time. Every
    dfs.namenode.decommission.interval seconds, the list is checked to see if
    the blocks have become fully replicated and then further blocks are added
    to reach the limit defined in this parameter."
163,dfs.namenode.decommission.backoff.monitor.pending.blocks.per.lock,1000,"When loading blocks into the replication queue, release the namenode write
    lock after the defined number of blocks have been processed."
164,dfs.namenode.redundancy.interval.seconds,3,"The periodicity in seconds with which the namenode computes 
  low redundancy work for datanodes. Support multiple time unit suffix(case insensitive),
  as described in dfs.heartbeat.interval."
165,dfs.namenode.redundancy.queue.restart.iterations,2400,"When picking blocks from the low redundancy queues, reset the
    bookmarked iterator after the set number of iterations to ensure any blocks
    which were not processed on the first pass are retried before the iterators
    would naturally reach their end point. This ensures blocks are retried
    more frequently when there are many pending blocks or blocks are
    continuously added to the queues preventing the iterator reaching its
    natural endpoint.
    The default setting of 2400 combined with the default of
    dfs.namenode.redundancy.interval.seconds means the iterators will be reset
    approximately every 2 hours.
    Setting this parameter to zero disables the feature and the iterators will
    be reset only when the end of all queues has been reached."
166,dfs.namenode.accesstime.precision,3600000,"The access time for HDFS file is precise upto this value. 
               The default value is 1 hour. Setting a value of 0 disables
               access times for HDFS."
167,dfs.stream-buffer-size,4096,"The size of buffer to stream files.
  The size of this buffer should probably be a multiple of hardware
  page size (4096 on Intel x86), and it determines how much data is
  buffered during read and write operations."
168,dfs.bytes-per-checksum,512,"The number of bytes per checksum.  Must not be larger than
  dfs.stream-buffer-size"
169,dfs.client-write-packet-size,65536,Packet size for clients to write
170,dfs.client.write.exclude.nodes.cache.expiry.interval.millis,600000,"The maximum period to keep a DN in the excluded nodes list
  at a client. After this period, in milliseconds, the previously excluded node(s) will
  be removed automatically from the cache and will be considered good for block allocations
  again. Useful to lower or raise in situations where you keep a file open for very long
  periods (such as a Write-Ahead-Log (WAL) file) to make the writer tolerant to cluster maintenance
  restarts. Defaults to 10 minutes."
171,dfs.namenode.checkpoint.period,3600,"The number of seconds between two periodic checkpoints.
    Support multiple time unit suffix(case insensitive), as described
    in dfs.heartbeat.interval.If no time unit is specified then seconds
    is assumed."
172,dfs.namenode.checkpoint.txns,1000000,"The Secondary NameNode or CheckpointNode will create a checkpoint
  of the namespace every 'dfs.namenode.checkpoint.txns' transactions, regardless
  of whether 'dfs.namenode.checkpoint.period' has expired."
173,dfs.namenode.checkpoint.check.period,60,"The SecondaryNameNode and CheckpointNode will poll the NameNode
  every 'dfs.namenode.checkpoint.check.period' seconds to query the number
  of uncheckpointed transactions. Support multiple time unit suffix(case insensitive),
  as described in dfs.heartbeat.interval.If no time unit is specified then
  seconds is assumed."
174,dfs.namenode.checkpoint.max-retries,3,"The SecondaryNameNode retries failed checkpointing. If the 
  failure occurs while loading fsimage or replaying edits, the number of
  retries is limited by this variable."
175,dfs.namenode.num.checkpoints.retained,2,"The number of image checkpoint files (fsimage_*) that will be retained by
  the NameNode and Secondary NameNode in their storage directories. All edit
  logs (stored on edits_* files) necessary to recover an up-to-date namespace from the oldest retained
  checkpoint will also be retained."
176,dfs.namenode.num.extra.edits.retained,1000000,"The number of extra transactions which should be retained
  beyond what is minimally necessary for a NN restart.
  It does not translate directly to file's age, or the number of files kept,
  but to the number of transactions (here ""edits"" means transactions).
  One edit file may contain several transactions (edits).
  During checkpoint, NameNode will identify the total number of edits to retain as extra by
  checking the latest checkpoint transaction value, subtracted by the value of this property.
  Then, it scans edits files to identify the older ones that don't include the computed range of
  retained transactions that are to be kept around, and purges them subsequently.
  The retainment can be useful for audit purposes or for an HA setup where a remote Standby Node may have
  been offline for some time and need to have a longer backlog of retained
  edits in order to start again.
  Typically each edit is on the order of a few hundred bytes, so the default
  of 1 million edits should be on the order of hundreds of MBs or low GBs.

  NOTE: Fewer extra edits may be retained than value specified for this setting
  if doing so would mean that more segments would be retained than the number
  configured by dfs.namenode.max.extra.edits.segments.retained."
177,dfs.namenode.max.extra.edits.segments.retained,10000,"The maximum number of extra edit log segments which should be retained
  beyond what is minimally necessary for a NN restart. When used in conjunction with
  dfs.namenode.num.extra.edits.retained, this configuration property serves to cap
  the number of extra edits files to a reasonable value."
178,dfs.namenode.delegation.key.update-interval,86400000,"The update interval for master key for delegation tokens 
       in the namenode in milliseconds."
179,dfs.namenode.delegation.token.max-lifetime,604800000,"The maximum lifetime in milliseconds for which a delegation 
      token is valid."
180,dfs.namenode.delegation.token.renew-interval,86400000,The renewal interval for delegation token in milliseconds.
181,dfs.datanode.failed.volumes.tolerated,0,"The number of volumes that are allowed to
  fail before a datanode stops offering service. By default
  any volume failure will cause a datanode to shutdown.
  The value should be greater than or equal to -1 , -1 represents minimum
  1 valid volume."
182,dfs.image.transfer.timeout,60000,"Socket timeout for the HttpURLConnection instance used in the image
        transfer. This is measured in milliseconds.
        This timeout prevents client hangs if the connection is idle
        for this configured timeout, during image transfer."
183,dfs.image.transfer.bandwidthPerSec,52428800,"Maximum bandwidth used for regular image transfers (instead of
        bootstrapping the standby namenode), in bytes per second.
        This can help keep normal namenode operations responsive during
        checkpointing.
        A default value is 50mb per second.
        The maximum bandwidth used for bootstrapping standby namenode is
        configured with dfs.image.transfer-bootstrap-standby.bandwidthPerSec.
        Support multiple size unit suffix(case insensitive), as described
        in dfs.blocksize."
184,dfs.image.transfer-bootstrap-standby.bandwidthPerSec,0,"Maximum bandwidth used for transferring image to bootstrap standby
      namenode, in bytes per second.
      A default value of 0 indicates that throttling is disabled. This default
      value should be used in most cases, to ensure timely HA operations.
      The maximum bandwidth used for regular image transfers is configured
      with dfs.image.transfer.bandwidthPerSec.
      Support multiple size unit suffix(case insensitive), as described in
      dfs.blocksize."
185,dfs.image.transfer.chunksize,65536,"Chunksize in bytes to upload the checkpoint.
        Chunked streaming is used to avoid internal buffering of contents
        of image file of huge size.
        Support multiple size unit suffix(case insensitive), as described
        in dfs.blocksize."
186,dfs.image.parallel.target.sections,12,"Controls the number of sub-sections that will be written to
        fsimage for each section. This should be larger than
        dfs.image.parallel.threads, otherwise all threads will not be
        used when loading. Ideally, have at least twice the number
        of target sections as threads, so each thread must load more
        than one section to avoid one long running section affecting
        the load time."
187,dfs.image.parallel.inode.threshold,1000000,"If the image contains less inodes than this setting, then
        do not write sub-sections and hence disable parallel loading.
        This is because small images load very quickly in serial and
        parallel loading is not needed."
188,dfs.image.parallel.threads,4,"The number of threads to use when dfs.image.parallel.load is
        enabled. This setting should be less than
        dfs.image.parallel.target.sections. The optimal number of
        threads will depend on the hardware and environment."
189,dfs.edit.log.transfer.timeout,30000,"Socket timeout for edit log transfer in milliseconds. This timeout
    should be configured such that normal edit log transfer for journal
    node syncing can complete successfully."
190,dfs.edit.log.transfer.bandwidthPerSec,0,"Maximum bandwidth used for transferring edit log to between journal nodes
    for syncing, in bytes per second.
    A default value of 0 indicates that throttling is disabled."
191,dfs.datanode.max.transfer.threads,4096,"Specifies the maximum number of threads to use for transferring data
        in and out of the DN."
192,dfs.datanode.scan.period.hours,504,"If this is positive, the DataNode will not scan any
        individual block more than once in the specified scan period.
        If this is negative, the block scanner is disabled.
        If this is set to zero, then the default value of 504 hours
        or 3 weeks is used. Prior versions of HDFS incorrectly documented
        that setting this key to zero will disable the block scanner."
193,dfs.block.scanner.volume.bytes.per.second,1048576,"If this is configured less than or equal to zero, the DataNode's block scanner will be disabled.  If this
        is positive, this is the number of bytes per second that the DataNode's
        block scanner will try to scan from each volume."
194,dfs.block.scanner.volume.join.timeout.ms,5000,"The amount of time in milliseconds that the BlockScanner times out waiting
    for the VolumeScanner thread to join during a shutdown call."
195,dfs.datanode.readahead.bytes,4194304,"While reading block files, if the Hadoop native libraries are available,
        the datanode can use the posix_fadvise system call to explicitly
        page data into the operating system buffer cache ahead of the current
        reader's position. This can improve performance especially when
        disks are highly contended.

        This configuration specifies the number of bytes ahead of the current
        read position which the datanode will attempt to read ahead. This
        feature may be disabled by configuring this property to 0.

        If the native libraries are not available, this configuration has no
        effect."
196,dfs.client.failover.max.attempts,15,"Expert only. The number of client failover attempts that should be
    made before the failover is considered failed."
197,dfs.client.failover.sleep.base.millis,500,"Expert only. The time to wait, in milliseconds, between failover
    attempts increases exponentially as a function of the number of
    attempts made so far, with a random factor of +/- 50%. This option
    specifies the base value used in the failover calculation. The
    first failover will retry immediately. The 2nd failover attempt
    will delay at least dfs.client.failover.sleep.base.millis
    milliseconds. And so on."
198,dfs.client.failover.sleep.max.millis,15000,"Expert only. The time to wait, in milliseconds, between failover
    attempts increases exponentially as a function of the number of
    attempts made so far, with a random factor of +/- 50%. This option
    specifies the maximum value to wait between failovers. 
    Specifically, the time between two failover attempts will not
    exceed +/- 50% of dfs.client.failover.sleep.max.millis
    milliseconds."
199,dfs.client.failover.connection.retries,0,"Expert only. Indicates the number of retries a failover IPC client
    will make to establish a server connection."
200,dfs.client.failover.connection.retries.on.timeouts,0,"Expert only. The number of retry attempts a failover IPC client
    will make on socket timeout when establishing a server connection."
201,dfs.client.datanode-restart.timeout,30,"Expert only. The time to wait, in seconds, from reception of an
    datanode shutdown notification for quick restart, until declaring
    the datanode dead and invoking the normal recovery mechanisms.
    The notification is sent by a datanode when it is being shutdown
    using the shutdownDatanode admin command with the upgrade option.
    Support multiple time unit suffix(case insensitive), as described
    in dfs.heartbeat.interval.If no time unit is specified then seconds
    is assumed."
202,dfs.ha.log-roll.period,120,"How often, in seconds, the StandbyNode should ask the active to
    roll edit logs. Since the StandbyNode only reads from finalized
    log segments, the StandbyNode will only be as up-to-date as how
    often the logs are rolled. Note that failover triggers a log roll
    so the StandbyNode will be up to date before it becomes active.
    Support multiple time unit suffix(case insensitive), as described
    in dfs.heartbeat.interval.If no time unit is specified then seconds
    is assumed."
203,dfs.ha.tail-edits.period,60,"How often, the StandbyNode and ObserverNode should check if there are new
    edit log entries ready to be consumed. This is the minimum period between
    checking; exponential backoff will be applied if no edits are found and
    dfs.ha.tail-edits.period.backoff-max is configured. By default, no
    backoff is applied.
    Supports multiple time unit suffix (case insensitive), as described
    in dfs.heartbeat.interval."
204,dfs.ha.tail-edits.period.backoff-max,0,"The maximum time the tailer should wait between checking for new edit log
    entries. Exponential backoff will be applied when an edit log tail is
    performed but no edits are available to be read. Values less than or
    equal to zero disable backoff entirely; this is the default behavior.
    Supports multiple time unit suffix (case insensitive), as described
    in dfs.heartbeat.interval."
205,dfs.ha.tail-edits.namenode-retries,3,Number of retries to use when contacting the namenode when tailing the log.
206,dfs.ha.tail-edits.rolledits.timeout,60,The timeout in seconds of calling rollEdits RPC on Active NN.
207,dfs.short.circuit.shared.memory.watcher.interrupt.check.ms,60000,"The length of time in milliseconds that the short-circuit shared memory
    watcher will go between checking for java interruptions sent from other
    threads.  This is provided mainly for unit tests."
208,dfs.namenode.stale.datanode.interval,30000,"Default time interval in milliseconds for marking a datanode as ""stale"",
    i.e., if the namenode has not received heartbeat msg from a datanode for
    more than this time interval, the datanode will be marked and treated 
    as ""stale"" by default. The stale interval cannot be too small since 
    otherwise this may cause too frequent change of stale states. 
    We thus set a minimum stale interval value (the default value is 3 times 
    of heartbeat interval) and guarantee that the stale interval cannot be less
    than the minimum value. A stale data node is avoided during lease/block
    recovery. It can be conditionally avoided for reads (see
    dfs.namenode.avoid.read.stale.datanode) and for writes (see
    dfs.namenode.avoid.write.stale.datanode)."
209,dfs.namenode.replication.work.multiplier.per.iteration,2,"*Note*: Advanced property. Change with caution.
    This determines the total amount of block transfers to begin in
    parallel at a DN, for replication, when such a command list is being
    sent over a DN heartbeat by the NN. The actual number is obtained by
    multiplying this multiplier with the total number of live nodes in the
    cluster. The result number is the number of blocks to begin transfers
    immediately for, per DN heartbeat. This number can be any positive,
    non-zero integer."
210,nfs.server.port,2049,Specify the port number used by Hadoop NFS.
211,nfs.mountd.port,4242,Specify the port number used by Hadoop mount daemon.
212,nfs.rtmax,1048576,"This is the maximum size in bytes of a READ request
    supported by the NFS gateway. If you change this, make sure you
    also update the nfs mount's rsize(add rsize= # of bytes to the 
    mount directive)."
213,nfs.wtmax,1048576,"This is the maximum size in bytes of a WRITE request
    supported by the NFS gateway. If you change this, make sure you
    also update the nfs mount's wsize(add wsize= # of bytes to the 
    mount directive)."
214,hadoop.fuse.connection.timeout,300,"The minimum number of seconds that we'll cache libhdfs connection objects
    in fuse_dfs. Lower values will result in lower memory consumption; higher
    values may speed up access by avoiding the overhead of creating new
    connection objects."
215,hadoop.fuse.timer.period,5,"The number of seconds between cache expiry checks in fuse_dfs. Lower values
    will result in fuse_dfs noticing changes to Kerberos ticket caches more
    quickly."
216,dfs.namenode.metrics.logger.period.seconds,600,"This setting controls how frequently the NameNode logs its metrics. The
    logging configuration must also define one or more appenders for
    NameNodeMetricsLog for the metrics to be logged.
    NameNode metrics logging is disabled if this value is set to zero or
    less than zero."
217,dfs.datanode.metrics.logger.period.seconds,600,"This setting controls how frequently the DataNode logs its metrics. The
    logging configuration must also define one or more appenders for
    DataNodeMetricsLog for the metrics to be logged.
    DataNode metrics logging is disabled if this value is set to zero or
    less than zero."
218,dfs.datanode.peer.metrics.min.outlier.detection.samples,1000,"Minimum number of packet send samples which are required to qualify for outlier detection.
      If the number of samples is below this then outlier detection is skipped."
219,dfs.datanode.min.outlier.detection.nodes,10,Minimum number of nodes to run outlier detection.
220,dfs.datanode.slowpeer.low.threshold.ms,5,Threshold in milliseconds below which a DataNode is definitely not slow.
221,dfs.datanode.max.nodes.to.report,5,"Number of nodes to include in JSON report. We will return nodes with
    the highest number of votes from peers."
222,dfs.namenode.max.slowpeer.collect.nodes,5,"How many slow nodes we will collect for filtering out
    when choosing targets for blocks.

    It is ignored if dfs.namenode.block-placement-policy.exclude-slow-nodes.enabled is false."
223,dfs.datanode.fileio.profiling.sampling.percentage,0,"This setting controls the percentage of file I/O events which will be
    profiled for DataNode disk statistics. The default value of 0 disables
    disk statistics. Set to an integer value between 1 and 100 to enable disk
    statistics."
224,dfs.datanode.min.outlier.detection.disks,5,Minimum number of disks to run outlier detection.
225,dfs.datanode.slowdisk.low.threshold.ms,20,Threshold in milliseconds below which a disk is definitely not slow.
226,dfs.datanode.max.disks.to.report,5,"Number of disks to include in JSON report per operation. We will return
    disks with the highest latency."
227,dfs.datanode.max.slowdisks.to.exclude,0,"The number of slow disks that needs to be excluded. By default, this parameter is set to 0,
    which disables excluding slow disk when choosing volume."
228,dfs.encrypt.data.transfer.cipher.key.bitlength,128,"The key bitlength negotiated by dfsclient and datanode for encryption.
    This value may be set to either 128, 192 or 256."
229,dfs.datanode.available-space-volume-choosing-policy.balanced-space-threshold,10737418240,"Only used when the dfs.datanode.fsdataset.volume.choosing.policy is set to
    org.apache.hadoop.hdfs.server.datanode.fsdataset.AvailableSpaceVolumeChoosingPolicy.
    This setting controls how much DN volumes are allowed to differ in terms of
    bytes of free disk space before they are considered imbalanced. If the free
    space of all the volumes are within this range of each other, the volumes
    will be considered balanced and block assignments will be done on a pure
    round robin basis. Support multiple size unit suffix(case insensitive), as
    described in dfs.blocksize."
230,dfs.client.server-defaults.validity.period.ms,3600000,"The amount of milliseconds after which cached server defaults are updated.

    By default this parameter is set to 1 hour.
    Support multiple time unit suffix(case insensitive), as described
    in dfs.heartbeat.interval."
231,dfs.namenode.retrycache.expirytime.millis,600000,The time for which retry cache entries are retained.
232,dfs.client.mmap.cache.size,256,"When zero-copy reads are used, the DFSClient keeps a cache of recently used
    memory mapped regions.  This parameter controls the maximum number of
    entries that we will keep in that cache.

    The larger this number is, the more file descriptors we will potentially
    use for memory-mapped files.  mmaped files also use virtual address space.
    You may need to increase your ulimit virtual address space limits before
    increasing the client mmap cache size.

    Note that you can still do zero-copy reads when this size is set to 0."
233,dfs.client.mmap.cache.timeout.ms,3600000,"The minimum length of time that we will keep an mmap entry in the cache
    between uses.  If an entry is in the cache longer than this, and nobody
    uses it, it will be removed by a background thread."
234,dfs.client.mmap.retry.timeout.ms,300000,"The minimum amount of time that we will wait before retrying a failed mmap
    operation."
235,dfs.client.short.circuit.replica.stale.threshold.ms,1800000,"The maximum amount of time that we will consider a short-circuit replica to
    be valid, if there is no communication from the DataNode.  After this time
    has elapsed, we will re-fetch the short-circuit replica even if it is in
    the cache."
236,dfs.datanode.max.locked.memory,0,"The amount of memory in bytes to use for caching of block replicas in
    memory on the datanode. The datanode's maximum locked memory soft ulimit
    (RLIMIT_MEMLOCK) must be set to at least this value, else the datanode
    will abort on startup. Support multiple size unit suffix(case insensitive),
    as described in dfs.blocksize.

    By default, this parameter is set to 0, which disables in-memory caching.

    If the native libraries are not available to the DataNode, this
    configuration has no effect."
237,dfs.namenode.list.cache.directives.num.responses,100,"This value controls the number of cache directives that the NameNode will
    send over the wire in response to a listDirectives RPC."
238,dfs.namenode.list.cache.pools.num.responses,100,"This value controls the number of cache pools that the NameNode will
    send over the wire in response to a listPools RPC."
239,dfs.namenode.path.based.cache.refresh.interval.ms,30000,"The amount of milliseconds between subsequent path cache rescans.  Path
    cache rescans are when we calculate which blocks should be cached, and on
    what datanodes.

    By default, this parameter is set to 30 seconds."
240,dfs.namenode.path.based.cache.retry.interval.ms,30000,"When the NameNode needs to uncache something that is cached, or cache
    something that is not cached, it must direct the DataNodes to do so by
    sending a DNA_CACHE or DNA_UNCACHE command in response to a DataNode
    heartbeat.  This parameter controls how frequently the NameNode will
    resend these commands."
241,dfs.datanode.fsdatasetcache.max.threads.per.volume,4,"The maximum number of threads per volume to use for caching new data
    on the datanode. These threads consume both I/O and CPU. This can affect
    normal datanode operations."
242,dfs.datanode.fsdatasetasyncdisk.max.threads.per.volume,4,"The maximum number of threads per volume used to process async disk
    operations on the datanode. These threads consume I/O and CPU at the
    same time. This will affect normal data node operations."
243,dfs.cachereport.intervalMsec,10000,"Determines cache reporting interval in milliseconds.  After this amount of
    time, the DataNode sends a full report of its cache state to the NameNode.
    The NameNode uses the cache report to update its map of cached blocks to
    DataNode locations.

    This configuration has no effect if in-memory caching has been disabled by
    setting dfs.datanode.max.locked.memory to 0 (which is the default).

    If the native libraries are not available to the DataNode, this
    configuration has no effect."
244,dfs.namenode.edit.log.autoroll.check.interval.ms,300000,"How often an active namenode will check if it needs to roll its edit log,
    in milliseconds."
245,dfs.client.socket.send.buffer.size,0,"Socket send buffer size for a write pipeline in DFSClient side.
    This may affect TCP connection throughput.
    If it is set to zero or negative value,
    no buffer size will be set explicitly,
    thus enable tcp auto-tuning on some system.
    The default value is 0."
246,dfs.domain.socket.disable.interval.seconds,600,"The interval that a DataNode is disabled for future Short-Circuit Reads,
    after an error happens during a Short-Circuit Read. Setting this to 0 will
    not disable Short-Circuit Reads at all after errors happen. Negative values
    are invalid."
247,dfs.client.read.shortcircuit.streams.cache.size,256,"The DFSClient maintains a cache of recently opened file descriptors.
    This parameter controls the maximum number of file descriptors in the cache.
    Setting this higher will use more file descriptors,
    but potentially provide better performance on workloads
    involving lots of seeks."
248,dfs.client.read.shortcircuit.streams.cache.expiry.ms,300000,"This controls the minimum amount of time
    file descriptors need to sit in the client cache context
    before they can be closed for being inactive for too long."
249,dfs.namenode.fs-limits.max-xattrs-per-inode,32,Maximum number of extended attributes per inode.
250,dfs.namenode.fs-limits.max-xattr-size,16384,"The maximum combined size of the name and value of an extended attribute
    in bytes. It should be larger than 0, and less than or equal to maximum
    size hard limit which is 32768.
    Support multiple size unit suffix(case insensitive), as described in
    dfs.blocksize."
251,dfs.client.slow.io.warning.threshold.ms,30000,"The threshold in milliseconds at which we will log a slow
    io warning in a dfsclient. By default, this parameter is set to 30000
    milliseconds (30 seconds)."
252,dfs.datanode.slow.io.warning.threshold.ms,300,"The threshold in milliseconds at which we will log a slow
    io warning in a datanode. By default, this parameter is set to 300
    milliseconds."
253,dfs.client.deadnode.detection.probe.deadnode.threads,10,The maximum number of threads to use for probing dead node.
254,dfs.client.deadnode.detection.idle.sleep.ms,10000,The sleep time of DeadNodeDetector per iteration.
255,dfs.client.deadnode.detection.probe.suspectnode.threads,10,The maximum number of threads to use for probing suspect node.
256,dfs.client.deadnode.detection.rpc.threads,20,The maximum number of threads to use for calling RPC call to recheck the liveness of dead node.
257,dfs.client.deadnode.detection.probe.deadnode.interval.ms,60000,Interval time in milliseconds for probing dead node behavior.
258,dfs.client.deadnode.detection.probe.suspectnode.interval.ms,300,Interval time in milliseconds for probing suspect node behavior.
259,dfs.client.deadnode.detection.probe.connection.timeout.ms,20000,Connection timeout for probing dead node in milliseconds.
260,dfs.client.refresh.read-block-locations.ms,0,Refreshing LocatedBlocks period. A value of 0 disables the feature.
261,dfs.client.refresh.read-block-locations.threads,5,"Number of threads to use for refreshing LocatedBlocks of registered
      DFSInputStreams. If a DFSClient opens many DFSInputStreams, increasing
      this may help refresh them all in a timely manner."
262,dfs.namenode.lease-recheck-interval-ms,2000,"During the release of lease a lock is hold that make any
    operations on the namenode stuck. In order to not block them during
    a too long duration we stop releasing lease after this max lock limit."
263,dfs.namenode.max-lock-hold-to-release-lease-ms,25,"During the release of lease a lock is hold that make any
    operations on the namenode stuck. In order to not block them during
    a too long duration we stop releasing lease after this max lock limit."
264,dfs.namenode.write-lock-reporting-threshold-ms,5000,"When a write lock is held on the namenode for a long time,
    this will be logged as the lock is released. This sets how long the
    lock must be held for logging to occur."
265,dfs.namenode.read-lock-reporting-threshold-ms,5000,"When a read lock is held on the namenode for a long time,
    this will be logged as the lock is released. This sets how long the
    lock must be held for logging to occur."
266,dfs.datanode.lock-reporting-threshold-ms,300,"When thread waits to obtain a lock, or a thread holds a lock for
    more than the threshold, a log message will be written. Note that
    dfs.lock.suppress.warning.interval ensures a single log message is
    emitted per interval for waiting threads and a single message for holding
    threads to avoid excessive logging."
267,dfs.namenode.startup.delay.block.deletion.sec,0,"The delay in seconds at which we will pause the blocks deletion
    after Namenode startup. By default it's disabled.
    In the case a directory has large number of directories and files are
    deleted, suggested delay is one hour to give the administrator enough time
    to notice large number of pending deletion blocks and take corrective
    action."
268,dfs.datanode.block.id.layout.upgrade.threads,6,"The number of threads to use when creating hard links from
    current to previous blocks during upgrade of a DataNode to block ID-based
    block layout (see HDFS-6482 for details on the layout)."
269,dfs.namenode.list.encryption.zones.num.responses,100,"When listing encryption zones, the maximum number of zones
    that will be returned in a batch. Fetching the list incrementally in
    batches improves namenode performance."
270,dfs.namenode.list.reencryption.status.num.responses,100,"When listing re-encryption status, the maximum number of zones
    that will be returned in a batch. Fetching the list incrementally in
    batches improves namenode performance."
271,dfs.namenode.list.openfiles.num.responses,1000,"When listing open files, the maximum number of open files that will be
      returned in a single batch. Fetching the list incrementally in batches
      improves namenode performance."
272,dfs.namenode.edekcacheloader.interval.ms,1000,"When KeyProvider is configured, the interval time of warming
    up edek cache on NN starts up / becomes active. All edeks will be loaded
    from KMS into provider cache. The edek cache loader will try to warm up the
    cache until succeed or NN leaves active state."
273,dfs.namenode.edekcacheloader.initial.delay.ms,3000,"When KeyProvider is configured, the time delayed until the first
    attempt to warm up edek cache on NN start up / become active."
274,dfs.namenode.reencrypt.batch.size,1000,How many EDEKs should the re-encrypt thread process in one batch.
275,dfs.namenode.reencrypt.edek.threads,10,"Maximum number of re-encrypt threads to contact the KMS
    and re-encrypt the edeks."
276,dfs.namenode.inotify.max.events.per.rpc,1000,"Maximum number of events that will be sent to an inotify client
    in a single RPC response. The default value attempts to amortize away
    the overhead for this RPC while avoiding huge memory requirements for the
    client and NameNode (1000 events should consume no more than 1 MB.)"
277,dfs.datanode.cache.revocation.timeout.ms,900000,"When the DFSClient reads from a block file which the DataNode is
    caching, the DFSClient can skip verifying checksums.  The DataNode will
    keep the block file in cache until the client is done.  If the client takes
    an unusually long time, though, the DataNode may need to evict the block
    file from the cache anyway.  This value controls how long the DataNode will
    wait for the client to release a replica that it is reading without
    checksums."
278,dfs.datanode.cache.revocation.polling.ms,500,"How often the DataNode should poll to see if the clients have
    stopped using a replica that the DataNode wants to uncache."
279,dfs.namenode.top.window.num.buckets,10,Number of buckets in the rolling window implementation of nntop
280,dfs.namenode.top.num.users,10,Number of top users returned by the top tool
281,dfs.webhdfs.ugi.expire.after.access,600000,"How long in milliseconds after the last access
      the cached UGI will expire. With 0, never expire."
282,dfs.namenode.blocks.per.postponedblocks.rescan,10000,"Number of blocks to rescan for each iteration of
    postponedMisreplicatedBlocks."
283,dfs.client.block.write.locateFollowingBlock.initial.delay.ms,400,"The initial delay (unit is ms) for locateFollowingBlock,
    the delay time will increase exponentially(double) for each retry
    until dfs.client.block.write.locateFollowingBlock.max.delay.ms is reached,
    after that the delay for each retry will be
    dfs.client.block.write.locateFollowingBlock.max.delay.ms."
284,dfs.client.block.write.locateFollowingBlock.max.delay.ms,60000,The maximum delay (unit is ms) before retrying locateFollowingBlock.
285,dfs.ha.zkfc.nn.http.timeout.ms,20000,"The HTTP connection and read timeout value (unit is ms ) when DFS ZKFC
    tries to get local NN thread dump after local NN becomes
    SERVICE_NOT_RESPONDING or SERVICE_UNHEALTHY.
    If it is set to zero, DFS ZKFC won't get local NN thread dump."
286,dfs.namenode.ec.policies.max.cellsize,4194304,The maximum cell size of erasure coding policy. Default is 4MB.
287,dfs.datanode.ec.reconstruction.stripedread.timeout.millis,5000,Datanode striped read timeout in milliseconds.
288,dfs.datanode.ec.reconstruction.stripedread.buffer.size,65536,Datanode striped read buffer size.
289,dfs.datanode.ec.reconstruction.threads,8,"Number of threads used by the Datanode for background
    reconstruction work."
290,dfs.namenode.quota.init-threads,12,"The number of concurrent threads to be used in quota initialization. The
    speed of quota initialization also affects the namenode fail-over latency.
    If the size of name space is big, try increasing this to 16 or higher."
291,dfs.datanode.transfer.socket.send.buffer.size,0,"Socket send buffer size for DataXceiver (mirroring packets to downstream
    in pipeline). This may affect TCP connection throughput.
    If it is set to zero or negative value, no buffer size will be set
    explicitly, thus enable tcp auto-tuning on some system.
    The default value is 0."
292,dfs.datanode.transfer.socket.recv.buffer.size,0,"Socket receive buffer size for DataXceiver (receiving packets from client
    during block writing). This may affect TCP connection throughput.
    If it is set to zero or negative value, no buffer size will be set
    explicitly, thus enable tcp auto-tuning on some system.
    The default value is 0."
293,dfs.datanode.bp-ready.timeout,20,"The maximum wait time for datanode to be ready before failing the
    received request. Setting this to 0 fails requests right away if the
    datanode is not yet registered with the namenode. This wait time
    reduces initial request failures after datanode restart.
    Support multiple time unit suffix(case insensitive), as described
    in dfs.heartbeat.interval.If no time unit is specified then seconds
    is assumed."
294,dfs.datanode.cached-dfsused.check.interval.ms,600000,"The interval check time of loading DU_CACHE_FILE in each volume.
    When the cluster doing the rolling upgrade operations, it will
    usually lead dfsUsed cache file of each volume expired and redo the
    du operations in datanode and that makes datanode start slowly. Adjust
    this property can make cache file be available for the time as you want."
295,dfs.http.client.failover.max.attempts,15,"Specify the max number of failover attempts for WebHDFS client
    in case of network exception."
296,dfs.http.client.retry.max.attempts,10,"Specify the max number of retry attempts for WebHDFS client,
    if the difference between retried attempts and failovered attempts is
    larger than the max number of retry attempts, there will be no more
    retries."
297,dfs.http.client.failover.sleep.base.millis,500,"Specify the base amount of time in milliseconds upon which the
    exponentially increased sleep time between retries or failovers
    is calculated for WebHDFS client."
298,dfs.http.client.failover.sleep.max.millis,15000,"Specify the upper bound of sleep time in milliseconds between
    retries or failovers for WebHDFS client."
299,datanode.https.port,50475,HTTPS port for DataNode.
300,dfs.namenode.get-blocks.max-qps,20,"The maximum number of getBlocks RPCs data movement utilities can make to
    a NameNode per second. Values less than or equal to 0 disable throttling.
    This affects anything that uses a NameNodeConnector, i.e., the Balancer,
    Mover, and StoragePolicySatisfier."
301,dfs.balancer.dispatcherThreads,200,"Size of the thread pool for the HDFS balancer block mover.
    dispatchExecutor"
302,dfs.balancer.movedWinWidth,5400000,"Window of time in ms for the HDFS balancer tracking blocks and its
    locations."
303,dfs.balancer.moverThreads,1000,"Thread pool size for executing block moves.
    moverThreadAllocator"
304,dfs.balancer.max-size-to-move,10737418240,"Maximum number of bytes that can be moved by the balancer in a single
    thread."
305,dfs.balancer.getBlocks.min-block-size,10485760,"Minimum block threshold size in bytes to ignore when fetching a source's
    block list."
306,dfs.balancer.getBlocks.size,2147483648,"Total size in bytes of Datanode blocks to get when fetching a source's
    block list."
307,dfs.balancer.block-move.timeout,0,"Maximum amount of time in milliseconds for a block to move. If this is set
    greater than 0, Balancer will stop waiting for a block move completion
    after this time. In typical clusters, a 3 to 5 minute timeout is reasonable.
    If timeout happens to a large proportion of block moves, this needs to be
    increased. It could also be that too much work is dispatched and many nodes
    are constantly exceeding the bandwidth limit as a result. In that case,
    other balancer parameters might need to be adjusted.
    It is disabled (0) by default."
308,dfs.balancer.max-no-move-interval,60000,"If this specified amount of time has elapsed and no block has been moved
    out of a source DataNode, on more effort will be made to move blocks out of
    this DataNode in the current Balancer iteration."
309,dfs.balancer.max-iteration-time,1200000,"Maximum amount of time while an iteration can be run by the Balancer. After
    this time the Balancer will stop the iteration, and reevaluate the work
    needs to be done to Balance the cluster. The default value is 20 minutes."
310,dfs.block.invalidate.limit,1000,"The maximum number of invalidate blocks sent by namenode to a datanode
    per heartbeat deletion command. This property works with
    ""dfs.namenode.invalidate.work.pct.per.iteration"" to throttle block
    deletions."
311,dfs.balancer.service.retries.on.exception,5,"When the balancer is executed as a long-running service, it will retry upon encountering an exception. This
    configuration determines how many times it will retry before considering the exception to be fatal and quitting."
312,dfs.block.misreplication.processing.limit,10000,Maximum number of blocks to process for initializing replication queues.
313,dfs.blockreport.incremental.intervalMsec,0,"If set to a positive integer, the value in ms to wait between sending
    incremental block reports from the Datanode to the Namenode."
314,dfs.checksum.ec.socket-timeout,3000,"Default timeout value in milliseconds for computing the checksum of striped blocks.
    Recommended to set the same value between client and DNs in a cluster because mismatching
    may cause exhausting handler threads."
315,dfs.client.block.write.locateFollowingBlock.retries,5,Number of retries to use when finding the next block during HDFS writes.
316,dfs.client.key.provider.cache.expiry,864000000,DFS client security key cache expiration in milliseconds.
317,dfs.client.max.block.acquire.failures,3,Maximum failures allowed when trying to get block information from a specific datanode.
318,dfs.client.read.short.circuit.replica.stale.threshold.ms,1800000,Threshold in milliseconds for read entries during short-circuit local reads.
319,dfs.client.read.shortcircuit.buffer.size,1048576,Buffer size in bytes for short-circuit local reads.
320,dfs.client.short.circuit.num,1,"Number of short-circuit caches. This setting should
    be in the range 1 - 5. Lower values will result in lower CPU consumption; higher
    values may speed up massive parallel reading files."
321,dfs.client.read.striped.threadpool.size,18,"The maximum number of threads used for parallel reading
    in striped layout."
322,dfs.client.retry.interval-ms.get-last-block-length,4000,"Retry interval in milliseconds to wait between retries in getting
    block lengths from the datanodes."
323,dfs.client.retry.max.attempts,10,Max retry attempts for DFSClient talking to namenodes.
324,dfs.client.retry.times.get-last-block-length,3,Number of retries for calls to fetchLocatedBlocksAndGetLastBlockLength().
325,dfs.client.retry.window.base,3000,"Base time window in ms for DFSClient retries.  For each retry attempt,
    this value is extended linearly (e.g. 3000 ms for first attempt and
    first retry, 6000 ms for second retry, 9000 ms for third retry, etc.)."
326,dfs.client.socket-timeout,60000,Default timeout value in milliseconds for all sockets.
327,dfs.client.socketcache.capacity,16,"Socket cache capacity (in entries) for short-circuit reads.
    If this value is set to 0, the client socket cache is disabled."
328,dfs.client.socketcache.expiryMsec,3000,Socket cache expiration for short-circuit reads in msec.
329,dfs.client.test.drop.namenode.response.number,0,"The number of Namenode responses dropped by DFSClient for each RPC call.  Used
    for testing the NN retry cache."
330,dfs.client.hedged.read.threadpool.size,0,"Support 'hedged' reads in DFSClient. To enable this feature, set the parameter
    to a positive number. The threadpool size is how many threads to dedicate
    to the running of these 'hedged', concurrent reads in your client."
331,dfs.client.hedged.read.threshold.millis,500,"Configure 'hedged' reads in DFSClient. This is the number of milliseconds
    to wait before starting up a 'hedged' read."
332,dfs.client.write.byte-array-manager.count-limit,2048,The maximum number of arrays allowed for each array length.
333,dfs.client.write.byte-array-manager.count-reset-time-period-ms,10000,"The time period in milliseconds that the allocation count for each array length is
    reset to zero if there is no increment."
334,dfs.client.write.byte-array-manager.count-threshold,128,"The count threshold for each array length so that a manager is created only after the
    allocation count exceeds the threshold. In other words, the particular array length
    is not managed until the allocation count exceeds the threshold."
335,dfs.client.write.max-packets-in-flight,80,The maximum number of DFSPackets allowed in flight.
336,dfs.client.block.reader.remote.buffer.size,512,"The output stream buffer size of a DFSClient remote read. The buffer default value is 512B. The buffer includes
      only some request parameters that are: block, blockToken, clientName, startOffset, len, verifyChecksum,
      cachingStrategy."
337,dfs.content-summary.limit,5000,"The maximum content summary counts allowed in one locking period. 0 or a negative number
    means no limit (i.e. no yielding)."
338,dfs.content-summary.sleep-microsec,500,"The length of time in microseconds to put the thread to sleep, between reaquiring the locks
    in content summary computation."
339,dfs.datanode.balance.max.concurrent.moves,100,"Maximum number of threads for Datanode balancer pending moves.  This
    value is reconfigurable via the ""dfsadmin -reconfig"" command."
340,dfs.datanode.data.transfer.bandwidthPerSec,0,"Specifies the maximum amount of bandwidth that the data transfering can utilize for transfering block when
      BlockConstructionStage is
      PIPELINE_SETUP_CREATE and clientName is empty.
      When the bandwidth value is zero, there is no limit."
341,dfs.datanode.data.write.bandwidthPerSec,0,"Specifies the maximum amount of bandwidth that the data transfering can utilize for writing block or pipeline
      recovery when
      BlockConstructionStage is PIPELINE_SETUP_APPEND_RECOVERY or PIPELINE_SETUP_STREAMING_RECOVERY.
      When the bandwidth value is zero, there is no limit."
342,dfs.datanode.ec.reconstruct.read.bandwidthPerSec,0,"Specifies the maximum amount of bandwidth that the EC reconstruction can utilize for reading.
      When the bandwidth value is zero, there is no limit."
343,dfs.datanode.ec.reconstruct.write.bandwidthPerSec,0,"Specifies the maximum amount of bandwidth that the EC reconstruction can utilize for writing.
      When the bandwidth value is zero, there is no limit."
344,dfs.datanode.lazywriter.interval.sec,60,Interval in seconds for Datanodes for lazy persist writes.
345,dfs.datanode.network.counts.cache.max.size,2147483647,"The maximum number of entries the datanode per-host network error
    count cache may contain."
346,dfs.datanode.restart.replica.expiration,50,"During shutdown for restart, the amount of time in seconds budgeted for
    datanode restart."
347,dfs.datanode.socket.reuse.keepalive,4000,"The window of time in ms before the DataXceiver closes a socket for a
    single request.  If a second request occurs within that window, the
    socket can be reused."
348,dfs.datanode.socket.write.timeout,480000,Timeout in ms for clients socket writes to DataNodes.
349,dfs.ha.zkfc.port,8019,"The port number that the zookeeper failover controller RPC
    server binds to."
350,dfs.journalnode.sync.interval,120000,"Time interval, in milliseconds, between two Journal Node syncs.
    This configuration takes effect only if the journalnode sync is enabled
    by setting the configuration parameter dfs.journalnode.enable.sync to true."
351,dfs.journalnode.edit-cache-size.bytes,1048576,"The size, in bytes, of the in-memory cache of edits to keep on the
    JournalNode. This cache is used to serve edits for tailing via the RPC-based
    mechanism, and is only enabled when dfs.ha.tail-edits.in-progress is true.
    Transactions range in size but are around 200 bytes on average, so the
    default of 1MB can store around 5000 transactions."
352,dfs.batched.ls.limit,100,"Limit the number of paths that can be listed in a single batched
    listing call. printed by ls. If less or equal to
    zero, at most DFS_LIST_LIMIT_DEFAULT (= 1000) will be printed."
353,dfs.ls.limit,1000,"Limit the number of files printed by ls. If less or equal to
    zero, at most DFS_LIST_LIMIT_DEFAULT (= 1000) will be printed."
354,dfs.mover.movedWinWidth,5400000,"The minimum time interval, in milliseconds, that a block can be
    moved to another location again."
355,dfs.mover.moverThreads,1000,Configure the balancer's mover thread pool size.
356,dfs.mover.retry.max.attempts,10,"The maximum number of retries before the mover consider the
    move failed."
357,dfs.mover.max-no-move-interval,60000,"If this specified amount of time has elapsed and no block has been moved
    out of a source DataNode, on more effort will be made to move blocks out of
    this DataNode in the current Mover iteration."
358,dfs.namenode.audit.log.async.buffer.size,128,"Only used when enables asynchronous audit log. Sets the number of audit
    logs allowed in the event buffer before the calling thread is blocked
    (if dfs.namenode.audit.log.async.blocking is true) or until logs are
    summarized and discarded. Default value is 128."
359,dfs.namenode.available-space-block-placement-policy.balanced-space-tolerance,5,"Only used when the dfs.block.replicator.classname is set to
      org.apache.hadoop.hdfs.server.blockmanagement.AvailableSpaceBlockPlacementPolicy.
      Special value between 0 and 20, inclusive. if the value is set beyond the scope,
      this value will be set as 5 by default, Increases tolerance of
      placing blocks on Datanodes with similar disk space used."
360,dfs.namenode.available-space-rack-fault-tolerant-block-placement-policy.balanced-space-tolerance,5,"Only used when the dfs.block.replicator.classname is set to
    org.apache.hadoop.hdfs.server.blockmanagement.AvailableSpaceRackFaultTolerantBlockPlacementPolicy.
    Special value between 0 and 20, inclusive. if the value is set beyond the scope,
    this value will be set as 5 by default, Increases tolerance of
    placing blocks on Datanodes with similar disk space used."
361,dfs.namenode.edits.dir.minimum,1,"dfs.namenode.edits.dir includes both required directories
    (specified by dfs.namenode.edits.dir.required) and optional directories.

    The number of usable optional directories must be greater than or equal
    to this property.  If the number of usable optional directories falls
    below dfs.namenode.edits.dir.minimum, HDFS will issue an error.

    This property defaults to 1."
362,dfs.namenode.file.close.num-committed-allowed,0,"Normally a file can only be closed with all its blocks are committed.
    When this value is set to a positive integer N, a file can be closed
    when N blocks are committed and the rest complete."
363,dfs.namenode.max-num-blocks-to-log,1000,"Puts a limit on the number of blocks printed to the log by the Namenode
    after a block report."
364,dfs.namenode.max.op.size,52428800,Maximum opcode size in bytes.
365,dfs.namenode.missing.checkpoint.periods.before.shutdown,3,"The number of checkpoint period windows (as defined by the property
    dfs.namenode.checkpoint.period) allowed by the Namenode to perform
    saving the namespace before shutdown."
366,dfs.namenode.name.cache.threshold,10,"Frequently accessed files that are accessed more times than this
    threshold are cached in the FSDirectory nameCache."
367,dfs.namenode.replication.max-streams,2,Hard limit for the number of replication streams other than those with highest-priority.
368,dfs.namenode.replication.max-streams-hard-limit,4,Hard limit for all replication streams.
369,dfs.namenode.reconstruction.pending.timeout-sec,300,"Timeout in seconds for block reconstruction.  If this value is 0 or less,
    then it will default to 5 minutes."
370,dfs.namenode.stale.datanode.minimum.interval,3,"Minimum number of missed heartbeats intervals for a datanode to
    be marked stale by the Namenode.  The actual interval is calculated as
    (dfs.namenode.stale.datanode.minimum.interval * dfs.heartbeat.interval)
    in seconds.  If this value is greater than the property
    dfs.namenode.stale.datanode.interval, then the calculated value above
    is used."
371,dfs.namenode.snapshotdiff.listing.limit,1000,"Limit the number of entries generated by getSnapshotDiffReportListing within
    one rpc call to the namenode.If less or equal to zero, at most
    DFS_NAMENODE_SNAPSHOT_DIFF_LISTING_LIMIT_DEFAULT (= 1000) will be sent
    across to the client within one rpc call."
372,dfs.namenode.snapshot.max.limit,65536,"Limits the maximum number of snapshots allowed per snapshottable
    directory.If the configuration is not set, the default limit
    for maximum no of snapshots allowed is 65536."
373,dfs.namenode.snapshot.skiplist.max.levels,0,"Maximum no of the skip levels to be maintained in the skip list for
    storing directory snapshot diffs. By default, it is set to 0 and a linear
    list will be used to store the directory snapshot diffs."
374,dfs.namenode.snapshot.skiplist.interval,10,"The interval after which the skip levels will be formed in the skip list
    for storing directory snapshot diffs. By default, value is set to 10."
375,dfs.storage.policy.satisfier.queue.limit,1000,"Storage policy satisfier queue size. This queue contains the currently
    scheduled file's inode ID for statisfy the policy.
    Default value is 1000."
376,dfs.storage.policy.satisfier.work.multiplier.per.iteration,1,"*Note*: Advanced property. Change with caution.
    This determines the total amount of block transfers to begin in
    one iteration, for satisfy the policy. The actual number is obtained by
    multiplying this multiplier with the total number of live nodes in the
    cluster. The result number is the number of blocks to begin transfers
    immediately. This number can be any positive, non-zero integer."
377,dfs.storage.policy.satisfier.recheck.timeout.millis,60000,"Blocks storage movements monitor re-check interval in milliseconds.
    This check will verify whether any blocks storage movement results arrived from DN
    and also verify if any of file blocks movements not at all reported to DN
    since dfs.storage.policy.satisfier.self.retry.timeout.
    The default value is 1 * 60 * 1000 (1 mins)"
378,dfs.storage.policy.satisfier.self.retry.timeout.millis,300000,"If any of file related block movements not at all reported by datanode,
    then after this timeout(in milliseconds), the item will be added back to movement needed list
    at namenode which will be retried for block movements.
    The default value is 5 * 60 * 1000 (5 mins)"
379,dfs.storage.policy.satisfier.retry.max.attempts,3,"Max retry to satisfy the block storage policy. After this retry block will be removed
    from the movement needed queue."
380,dfs.storage.policy.satisfier.datanode.cache.refresh.interval.ms,300000,"How often to refresh the datanode storages cache in milliseconds. This cache
    keeps live datanode storage reports fetched from namenode. After elapsed time,
    it will again fetch latest datanodes from namenode.
    By default, this parameter is set to 5 minutes."
381,dfs.storage.policy.satisfier.max.outstanding.paths,10000,"Defines the maximum number of paths to satisfy that can be queued up in the
    Satisfier call queue in a period of time. Default value is 10000."
382,dfs.qjournal.accept-recovery.timeout.ms,120000,"Quorum timeout in milliseconds during accept phase of
    recovery/synchronization for a specific segment."
383,dfs.qjournal.finalize-segment.timeout.ms,120000,"Quorum timeout in milliseconds during finalizing for a specific
    segment."
384,dfs.qjournal.get-journal-state.timeout.ms,120000,"Timeout in milliseconds when calling getJournalState().
    JournalNodes."
385,dfs.qjournal.new-epoch.timeout.ms,120000,"Timeout in milliseconds when getting an epoch number for write
    access to JournalNodes."
386,dfs.qjournal.prepare-recovery.timeout.ms,120000,"Quorum timeout in milliseconds during preparation phase of
    recovery/synchronization for a specific segment."
387,dfs.qjournal.queued-edits.limit.mb,10,Queue size in MB for quorum journal edits.
388,dfs.qjournal.select-input-streams.timeout.ms,20000,Timeout in milliseconds for accepting streams from JournalManagers.
389,dfs.qjournal.start-segment.timeout.ms,20000,Quorum timeout in milliseconds for starting a log segment.
390,dfs.qjournal.write-txns.timeout.ms,20000,"Write timeout in milliseconds when writing to a quorum of remote
    journals."
391,dfs.qjournal.http.open.timeout.ms,60000,"Timeout in milliseconds when open a new HTTP connection to remote
    journals."
392,dfs.qjournal.http.read.timeout.ms,60000,"Timeout in milliseconds when reading from a HTTP connection from remote
    journals."
393,dfs.qjournal.parallel-read.num-threads,5,Number of threads per JN to be used for tailing edits.
394,dfs.webhdfs.netty.high.watermark,65535,High watermark configuration to Netty for Datanode WebHdfs.
395,dfs.webhdfs.netty.low.watermark,32768,Low watermark configuration to Netty for Datanode WebHdfs.
396,dfs.disk.balancer.max.disk.throughputInMBperSec,10,"Maximum disk bandwidth used by diskbalancer
      during read from a source disk. The unit is MB/sec."
397,dfs.disk.balancer.block.tolerance.percent,10,"When a disk balancer copy operation is proceeding, the datanode is still
      active. So it might not be possible to move the exactly specified
      amount of data. So tolerance allows us to define a percentage which
      defines a good enough move."
398,dfs.disk.balancer.max.disk.errors,5,"During a block move from a source to destination disk, we might
      encounter various errors. This defines how many errors we can tolerate
      before we declare a move between 2 disks (or a step) has failed."
399,dfs.disk.balancer.plan.threshold.percent,10,"The percentage threshold value for volume Data Density in a plan.
      If the absolute value of volume Data Density which is out of
      threshold value in a node, it means that the volumes corresponding to
      the disks should do the balancing in the plan. The default value is 10."
400,dfs.provided.aliasmap.inmemory.batch-size,500,The batch size when iterating over the database backing the aliasmap
401,dfs.provided.aliasmap.load.retries,0,"The number of retries on the Datanode to load the provided aliasmap;
      defaults to 0."
402,httpfs.buffer.size,4096,The size buffer to be used when creating or opening httpfs filesystem IO stream.
403,dfs.namenode.block.deletion.increment,1000,"The number of block deletion increment.
      This setting will control the block increment deletion rate to
      ensure that other waiters on the lock can get in."
404,dfs.namenode.blockreport.queue.size,1024,The queue size of BlockReportProcessingThread in BlockManager.
405,dfs.namenode.storage.dir.perm,700,"Permissions for the directories on on the local filesystem where
      the DFS namenode stores the fsImage. The permissions can either be
      octal or symbolic."
406,dfs.namenode.blockreport.max.lock.hold.time,4,The BlockReportProcessingThread max write lock hold time in ms.
407,dfs.journalnode.edits.dir.perm,700,"Permissions for the directories on on the local filesystem where
      the DFS journal node stores the edits. The permissions can either be
      octal or symbolic."
408,dfs.namenode.lease-hard-limit-sec,1200,Determines the namenode automatic lease recovery interval in seconds.
409,mapreduce.task.io.sort.factor,10,"The number of streams to merge at once while sorting
  files.  This determines the number of open file handles."
410,mapreduce.task.io.sort.mb,100,"The total amount of buffer memory to use while sorting
  files, in megabytes.  By default, gives each merge stream 1MB, which
  should minimize seeks."
411,mapreduce.job.local-fs.single-disk-limit.check.interval-ms,5000,Interval of disk limit check to run in ms.
412,mapreduce.job.maps,2,"The default number of map tasks per job.
  Ignored when mapreduce.framework.name is ""local""."
413,mapreduce.job.reduces,1,"The default number of reduce tasks per job. Typically set to 99%
  of the cluster's reduce capacity, so that if a node fails the reduces can
  still be executed in a single wave.
  Ignored when mapreduce.framework.name is ""local""."
414,mapreduce.job.running.map.limit,0,"The maximum number of simultaneous map tasks per job.
  There is no limit if this value is 0 or negative."
415,mapreduce.job.running.reduce.limit,0,"The maximum number of simultaneous reduce tasks per job.
  There is no limit if this value is 0 or negative."
416,mapreduce.job.reducer.preempt.delay.sec,0,"The threshold (in seconds) after which an unsatisfied
      mapper request triggers reducer preemption when there is no anticipated
      headroom. If set to 0 or a negative value, the reducer is preempted as
      soon as lack of headroom is detected. Default is 0."
417,mapreduce.job.reducer.unconditional-preempt.delay.sec,300,"The threshold (in seconds) after which an unsatisfied
      mapper request triggers a forced reducer preemption irrespective of the
      anticipated headroom. By default, it is set to 5 mins. Setting it to 0
      leads to immediate reducer preemption. Setting to -1 disables this
      preemption altogether."
418,mapreduce.job.max.split.locations,15,"The max number of block locations to store for each split for
    locality calculation."
419,mapreduce.job.split.metainfo.maxsize,10000000,"The maximum permissible size of the split metainfo file.
  The MapReduce ApplicationMaster won't attempt to read submitted split metainfo
  files bigger than this configured value.
  No limits if set to -1."
420,mapreduce.map.maxattempts,4,"Expert: The maximum number of attempts per map task.
  In other words, framework will try to execute a map task these many number
  of times before giving up on it."
421,mapreduce.reduce.maxattempts,4,"Expert: The maximum number of attempts per reduce task.
  In other words, framework will try to execute a reduce task these many number
  of times before giving up on it."
422,mapreduce.reduce.shuffle.fetch.retry.interval-ms,1000,"Time of interval that fetcher retry to fetch again when some
  non-fatal failure happens because of some events like NM restart."
423,mapreduce.reduce.shuffle.fetch.retry.timeout-ms,30000,"Timeout value for fetcher to retry to fetch again when some
  non-fatal failure happens because of some events like NM restart."
424,mapreduce.reduce.shuffle.retry-delay.max.ms,60000,"The maximum number of ms the reducer will delay before retrying
  to download map data."
425,mapreduce.reduce.shuffle.parallelcopies,5,"The default number of parallel transfers run by reduce
  during the copy(shuffle) phase."
426,mapreduce.reduce.shuffle.connect.timeout,180000,"Expert: The maximum amount of time (in milli seconds) reduce
  task spends in trying to connect to a remote node for getting map output."
427,mapreduce.reduce.shuffle.read.timeout,180000,"Expert: The maximum amount of time (in milli seconds) reduce
  task waits for map output data to be available for reading after obtaining
  connection."
428,mapreduce.shuffle.listen.queue.size,128,The length of the shuffle server listen queue.
429,mapreduce.shuffle.connection-keep-alive.timeout,5,"The number of seconds a shuffle client attempts to retain
   http connection. Refer ""Keep-Alive: timeout="" header in
   Http specification"
430,mapreduce.task.timeout,600000,"The number of milliseconds before a task will be
  terminated if it neither reads an input, writes an output, nor
  updates its status string.  A value of 0 disables the timeout."
431,mapreduce.task.stuck.timeout-ms,600000,"The max timeout before receiving remote task's first heartbeat.
    This parameter is in order to avoid waiting for the container
    to start indefinitely, which made task stuck in the NEW state.
    A value of 0 disables the timeout."
432,mapreduce.map.cpu.vcores,1,"The number of virtual cores to request from the scheduler for
  each map task."
433,mapreduce.reduce.cpu.vcores,1,"The number of virtual cores to request from the scheduler for
  each reduce task."
434,mapreduce.reduce.merge.inmem.threshold,1000,"The threshold, in terms of the number of files
  for the in-memory merge process. When we accumulate threshold number of files
  we initiate the in-memory merge and spill to disk. A value of 0 or less than
  0 indicates we want to DON'T have any threshold and instead depend only on
  the ramfs's memory consumption to trigger the merge."
435,mapreduce.shuffle.ssl.file.buffer.size,65536,Buffer size for reading spills from file when using SSL.
436,mapreduce.shuffle.max.connections,0,"Max allowed connections for the shuffle.  Set to 0 (zero)
               to indicate no limit on the number of connections."
437,mapreduce.shuffle.max.threads,0,"Max allowed threads for serving shuffle connections. Set to zero
  to indicate the default of 2 times the number of available
  processors (as reported by Runtime.availableProcessors()). Netty is used to
  serve requests, so a thread is not needed for each connection."
438,mapreduce.shuffle.transfer.buffer.size,131072,"This property is used only if
  mapreduce.shuffle.transferTo.allowed is set to false. In that case,
  this property defines the size of the buffer used in the buffer copy code
  for the shuffle phase. The size of this buffer determines the size of the IO
  requests."
439,mapreduce.job.speculative.minimum-allowed-tasks,10,"The minimum allowed tasks that
  can be speculatively re-executed at any time."
440,mapreduce.job.speculative.retry-after-no-speculate,1000,"The waiting time(ms) to do next round of speculation
  if there is no task speculated in this round."
441,mapreduce.job.speculative.retry-after-speculate,15000,"The waiting time(ms) to do next round of speculation
  if there are tasks speculated in this round."
442,mapreduce.job.ubertask.maxmaps,9,"Threshold for number of maps, beyond which job is considered
  too big for the ubertasking optimization.  Users may override this value,
  but only downward."
443,mapreduce.job.ubertask.maxreduces,1,"Threshold for number of reduces, beyond which job is considered
  too big for the ubertasking optimization.  CURRENTLY THE CODE CANNOT SUPPORT
  MORE THAN ONE REDUCE and will ignore larger values.  (Zero is a valid max,
  however.)  Users may override this value, but only downward."
444,mapreduce.input.fileinputformat.split.minsize,0,"The minimum size chunk that map input should be split
  into.  Note that some file formats may have minimum split sizes that
  take priority over this setting."
445,mapreduce.input.fileinputformat.list-status.num-threads,1,"The number of threads to use to list and fetch block locations
  for the specified input paths. Note: multiple threads should not be used
  if a custom non thread-safe path filter is used."
446,mapreduce.input.lineinputformat.linespermap,1,"When using NLineInputFormat, the number of lines of input data
  to include in each split."
447,mapreduce.client.submit.file.replication,10,"The replication level for submitted job files.  This
  should be around the square root of the number of nodes."
448,mapreduce.task.userlog.limit.kb,0,The maximum size of user-logs of each task in KB. 0 disables the cap.
449,yarn.app.mapreduce.am.container.log.limit.kb,0,"The maximum size of the MRAppMaster attempt container logs in KB.
    0 disables the cap."
450,yarn.app.mapreduce.task.container.log.backups,0,"Number of backup files for task logs when using
    ContainerRollingLogAppender (CRLA). See
    org.apache.log4j.RollingFileAppender.maxBackupIndex. By default,
    ContainerLogAppender (CLA) is used, and container logs are not rolled. CRLA
    is enabled for tasks when both mapreduce.task.userlog.limit.kb and
    yarn.app.mapreduce.task.container.log.backups are greater than zero."
451,yarn.app.mapreduce.am.container.log.backups,0,"Number of backup files for the ApplicationMaster logs when using
    ContainerRollingLogAppender (CRLA). See
    org.apache.log4j.RollingFileAppender.maxBackupIndex. By default,
    ContainerLogAppender (CLA) is used, and container logs are not rolled. CRLA
    is enabled for the ApplicationMaster when both
    yarn.app.mapreduce.am.container.log.limit.kb and
    yarn.app.mapreduce.am.container.log.backups are greater than zero."
452,yarn.app.mapreduce.shuffle.log.limit.kb,0,"Maximum size of the syslog.shuffle file in kilobytes
    (0 for no limit)."
453,yarn.app.mapreduce.shuffle.log.backups,0,"If yarn.app.mapreduce.shuffle.log.limit.kb and
    yarn.app.mapreduce.shuffle.log.backups are greater than zero
    then a ContainerRollngLogAppender is used instead of ContainerLogAppender
    for syslog.shuffle. See
    org.apache.log4j.RollingFileAppender.maxBackupIndex"
454,mapreduce.job.maxtaskfailures.per.tracker,3,"The number of task-failures on a node manager of a given job
               after which new tasks of that job aren't assigned to it. It
               MUST be less than mapreduce.map.maxattempts and
               mapreduce.reduce.maxattempts otherwise the failed task will
               never be tried on a different node."
455,mapreduce.client.completion.pollinterval,5000,"The interval (in milliseconds) between which the JobClient
    polls the MapReduce ApplicationMaster for updates about job status. You may want to
    set this to a lower value to make tests run faster on a single node system. Adjusting
    this value in production may lead to unwanted client-server traffic."
456,mapreduce.client.progressmonitor.pollinterval,1000,"The interval (in milliseconds) between which the JobClient
    reports status to the console and checks for job completion. You may want to set this
    to a lower value to make tests run faster on a single node system. Adjusting
    this value in production may lead to unwanted client-server traffic."
457,mapreduce.task.skip.start.attempts,2,"The number of Task attempts AFTER which skip mode
    will be kicked off. When skip mode is kicked off, the
    tasks reports the range of records which it will process
    next, to the MR ApplicationMaster. So that on failures, the MR AM
    knows which ones are possibly the bad records. On further executions,
    those are skipped."
458,mapreduce.map.skip.maxrecords,0,"The number of acceptable skip records surrounding the bad
    record PER bad record in mapper. The number includes the bad record as well.
    To turn the feature of detection/skipping of bad records off, set the
    value to 0.
    The framework tries to narrow down the skipped range by retrying
    until this threshold is met OR all attempts get exhausted for this task.
    Set the value to Long.MAX_VALUE to indicate that framework need not try to
    narrow down. Whatever records(depends on application) get skipped are
    acceptable."
459,mapreduce.reduce.skip.maxgroups,0,"The number of acceptable skip groups surrounding the bad
    group PER bad group in reducer. The number includes the bad group as well.
    To turn the feature of detection/skipping of bad groups off, set the
    value to 0.
    The framework tries to narrow down the skipped range by retrying
    until this threshold is met OR all attempts get exhausted for this task.
    Set the value to Long.MAX_VALUE to indicate that framework need not try to
    narrow down. Whatever groups(depends on application) get skipped are
    acceptable."
460,mapreduce.ifile.readahead.bytes,4194304,Configuration key to set the IFile readahead length in bytes.
461,mapreduce.task.merge.progress.records,10000,"The number of records to process during merge before
   sending a progress notification to the MR ApplicationMaster."
462,mapreduce.task.combine.progress.records,10000,"The number of records to process during combine output collection
   before sending a progress notification."
463,mapreduce.shuffle.port,13562,"Default port that the ShuffleHandler will run on. ShuffleHandler
   is a service run at the NodeManager to facilitate transfers of intermediate
   Map outputs to requesting Reducers."
464,mapreduce.shuffle.pathcache.max-weight,10485760,The maximum total weight of entries the cache may contain.
465,mapreduce.shuffle.pathcache.expire-after-access-minutes,5,"The length of time after an entry is last accessed that it
    should be automatically removed."
466,mapreduce.shuffle.pathcache.concurrency-level,16,"Uses the concurrency level to create a fixed number of hashtable
    segments, each governed by its own write lock."
467,mapreduce.job.counters.max,120,The max number of user counters allowed per job.
468,mapreduce.am.max-attempts,2,"The maximum number of application attempts. It is a
  application-specific setting. It should not be larger than the global number
  set by resourcemanager. Otherwise, it will be override. The default number is
  set to 2, to allow at least one retry for AM."
469,mapreduce.job.end-notification.retry.attempts,0,"The number of times the submitter of the job wants to retry job
    end notification if it fails. This is capped by
    mapreduce.job.end-notification.max.attempts"
470,mapreduce.job.end-notification.retry.interval,1000,"The number of milliseconds the submitter of the job wants to
    wait before job end notification is retried if it fails. This is capped by
    mapreduce.job.end-notification.max.retry.interval"
471,mapreduce.job.end-notification.max.attempts,5,"The maximum number of times a URL will be read for providing job
    end notification. Cluster administrators can set this to limit how long
    after end of a job, the Application Master waits before exiting. Must be
    marked as final to prevent users from overriding this."
472,mapreduce.job.end-notification.max.retry.interval,5000,"The maximum amount of time (in milliseconds) to wait before
     retrying job end notification. Cluster administrators can set this to
     limit how long the Application Master waits before exiting. Must be marked
     as final to prevent users from overriding this."
473,yarn.app.mapreduce.am.job.task.listener.thread-count,30,"The number of threads used to handle RPC calls in the
    MR AppMaster from remote tasks"
474,yarn.app.mapreduce.am.job.committer.cancel-timeout,60000,"The amount of time in milliseconds to wait for the output
    committer to cancel an operation if the job is killed"
475,yarn.app.mapreduce.am.job.committer.commit-window,10000,"Defines a time window in milliseconds for output commit
  operations.  If contact with the RM has occurred within this window then
  commits are allowed, otherwise the AM will not allow output commits until
  contact with the RM has been re-established."
476,mapreduce.fileoutputcommitter.algorithm.version,2,"The file output committer algorithm version
  valid algorithm version number: 1 or 2
  default to 2, which is the original algorithm

  In algorithm version 1,

  1. commitTask will rename directory
  $joboutput/_temporary/$appAttemptID/_temporary/$taskAttemptID/
  to
  $joboutput/_temporary/$appAttemptID/$taskID/

  2. recoverTask will also do a rename
  $joboutput/_temporary/$appAttemptID/$taskID/
  to
  $joboutput/_temporary/($appAttemptID + 1)/$taskID/

  3. commitJob will merge every task output file in
  $joboutput/_temporary/$appAttemptID/$taskID/
  to
  $joboutput/, then it will delete $joboutput/_temporary/
  and write $joboutput/_SUCCESS

  It has a performance regression, which is discussed in MAPREDUCE-4815.
  If a job generates many files to commit then the commitJob
  method call at the end of the job can take minutes.
  the commit is single-threaded and waits until all
  tasks have completed before commencing.

  algorithm version 2 will change the behavior of commitTask,
  recoverTask, and commitJob.

  1. commitTask will rename all files in
  $joboutput/_temporary/$appAttemptID/_temporary/$taskAttemptID/
  to $joboutput/

  2. recoverTask actually doesn't require to do anything, but for
  upgrade from version 1 to version 2 case, it will check if there
  are any files in
  $joboutput/_temporary/($appAttemptID - 1)/$taskID/
  and rename them to $joboutput/

  3. commitJob can simply delete $joboutput/_temporary and write
  $joboutput/_SUCCESS

  This algorithm will reduce the output commit time for
  large jobs by having the tasks commit directly to the final
  output directory as they were completing and commitJob had
  very little to do."
477,yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms,1000,"The interval in ms at which the MR AppMaster should send
    heartbeats to the ResourceManager"
478,yarn.app.mapreduce.client-am.ipc.max-retries,3,"The number of client retries to the AM - before reconnecting
    to the RM to fetch Application Status.
    In other words, it is the ipc.client.connect.max.retries to be used during
    reconnecting to the RM and fetching Application Status."
479,yarn.app.mapreduce.client-am.ipc.max-retries-on-timeouts,3,"The number of client retries on socket timeouts to the AM - before
    reconnecting to the RM to fetch Application Status.
    In other words, it is the ipc.client.connect.max.retries.on.timeouts to be used during
    reconnecting to the RM and fetching Application Status."
480,yarn.app.mapreduce.client.max-retries,3,"The number of client retries to the RM/HS before
    throwing exception. This is a layer above the ipc."
481,yarn.app.mapreduce.am.resource.mb,1536,The amount of memory the MR AppMaster needs.
482,yarn.app.mapreduce.am.resource.cpu-vcores,1,The number of virtual CPU cores the MR AppMaster needs.
483,yarn.app.mapreduce.am.hard-kill-timeout-ms,10000,Number of milliseconds to wait before the job client kills the application.
484,yarn.app.mapreduce.client.job.max-retries,3,"The number of retries the client will make for getJob and
    dependent calls.
    This is needed for non-HDFS DFS where additional, high level
    retries are required to avoid spurious failures during the getJob call.
    30 is a good value for WASB"
485,yarn.app.mapreduce.client.job.retry-interval,2000,"The delay between getJob retries in ms for retries configured
  with yarn.app.mapreduce.client.job.max-retries."
486,mapreduce.jobhistory.intermediate-user-done-dir.permissions,770,"The permissions of the user directories in
  ${mapreduce.jobhistory.intermediate-done-dir}. The user and the group
  permission must be 7, this is enforced."
487,mapreduce.jobhistory.cleaner.interval-ms,86400000,"How often the job history cleaner checks for files to delete,
  in milliseconds. Defaults to 86400000 (one day). Files are only deleted if
  they are older than mapreduce.jobhistory.max-age-ms."
488,mapreduce.jobhistory.max-age-ms,604800000,"Job history files older than this many milliseconds will
  be deleted when the history cleaner runs. Defaults to 604800000 (1 week)."
489,mapreduce.jobhistory.client.thread-count,10,The number of threads to handle client API requests
490,mapreduce.jobhistory.datestring.cache.size,200000,"Size of the date string cache. Effects the number of directories
  which will be scanned to find a job."
491,mapreduce.jobhistory.joblist.cache.size,20000,Size of the job list cache
492,mapreduce.jobhistory.loadedjobs.cache.size,5,"Size of the loaded job cache.  This property is ignored if
  the property mapreduce.jobhistory.loadedtasks.cache.size is set to a
  positive value."
493,mapreduce.jobhistory.move.interval-ms,180000,"Scan for history files to more from intermediate done dir to done
  dir at this frequency."
494,mapreduce.jobhistory.move.thread-count,3,The number of threads used to move files.
495,mapreduce.jobhistory.jobname.limit,50,Number of characters allowed for job name in Job History Server web page.
496,yarn.app.mapreduce.am.containerlauncher.threadpool-initial-size,10,"The initial size of thread pool to launch containers in the
    app master."
497,mapreduce.task.exit.timeout,60000,"The number of milliseconds before a task will be
  terminated if it stays in finishing state for too long.
  After a task attempt completes from TaskUmbilicalProtocol's point of view,
  it will be transitioned to finishing state. That will give a chance for the
  task to exit by itself."
498,mapreduce.task.exit.timeout.check-interval-ms,20000,"The interval in milliseconds between which the MR framework
  checks if task attempts stay in finishing state for too long."
499,mapreduce.job.encrypted-intermediate-data-key-size-bits,128,Mapreduce encrypt data key size default is 128
500,mapreduce.job.encrypted-intermediate-data.buffer.kb,128,"Buffer size for intermediate encrypt data in kb
  default is 128"
501,mapreduce.job.cache.limit.max-resources,0,"The maximum number of resources a map reduce job is allowed to
    submit for localization via files, libjars, archives, and jobjar command
    line arguments and through the distributed cache. If set to 0 the limit is
    ignored."
502,mapreduce.job.cache.limit.max-resources-mb,0,"The maximum size (in MB) a map reduce job is allowed to submit
    for localization via files, libjars, archives, and jobjar command line
    arguments and through the distributed cache. If set to 0 the limit is
    ignored."
503,mapreduce.job.cache.limit.max-single-resource-mb,0,"The maximum size (in MB) of a single resource a map reduce job
    is allow to submit for localization via files, libjars, archives, and
    jobjar command line arguments and through the distributed cache. If set to
    0 the limit is ignored."
504,yarn.resourcemanager.client.thread-count,50,
505,yarn.resourcemanager.amlauncher.thread-count,50,
506,yarn.resourcemanager.nodemanager-connect-retries,10,
507,yarn.dispatcher.drain-events.timeout,300000,
508,yarn.dispatcher.print-events-info.threshold,5000,
509,yarn.dispatcher.cpu-monitor.samples-per-min,60,
510,yarn.am.liveness-monitor.expiry-interval-ms,600000,
511,yarn.resourcemanager.scheduler.client.thread-count,50,
512,yarn.resourcemanager.placement-constraints.retry-attempts,3,
513,yarn.resourcemanager.placement-constraints.algorithm.pool-size,1,
514,yarn.resourcemanager.placement-constraints.scheduler.pool-size,1,
515,yarn.resourcemanager.admin.client.thread-count,1,
516,yarn.resourcemanager.connect.max-wait.ms,900000,
517,yarn.resourcemanager.connect.retry-interval.ms,30000,
518,yarn.resourcemanager.am.max-attempts,2,
519,yarn.resourcemanager.container.liveness-monitor.interval-ms,600000,
520,yarn.nm.liveness-monitor.expiry-interval-ms,600000,
521,yarn.resourcemanager.resource-tracker.client.thread-count,50,
522,yarn.scheduler.minimum-allocation-mb,1024,
523,yarn.scheduler.maximum-allocation-mb,8192,
524,yarn.scheduler.minimum-allocation-vcores,1,
525,yarn.scheduler.maximum-allocation-vcores,4,
526,yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms,10000,
527,yarn.resourcemanager.fs.state-store.num-retries,0,
528,yarn.resourcemanager.fs.state-store.retry-interval-ms,1000,
529,yarn.resourcemanager.leveldb-state-store.compaction-interval-secs,3600,
530,yarn.resourcemanager.zk-appid-node.split-index,0,
531,yarn.resourcemanager.zk-delegation-token-node.split-index,0,
532,yarn.resourcemanager.zk-max-znode-size.bytes,1048576,
533,yarn.resourcemanager.epoch.range,0,
534,yarn.client.failover-retries,0,
535,yarn.client.failover-retries-on-socket-timeouts,0,
536,yarn.resourcemanager.max-completed-applications,1000,
537,yarn.resourcemanager.delayed.delegation-token.removal-interval-ms,30000,
538,yarn.resourcemanager.delegation-token.max-conf-size-bytes,12800,
539,yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs,86400,
540,yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs,86400,
541,yarn.resourcemanager.nodemanagers.heartbeat-interval-ms,1000,
542,yarn.resourcemanager.nodemanagers.heartbeat-interval-min-ms,1000,
543,yarn.resourcemanager.nodemanagers.heartbeat-interval-max-ms,1000,
544,yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size,10,
545,yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.batch-size,1000,
546,yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.interval-seconds,60,
547,yarn.resourcemanager.max-log-aggregation-diagnostics-in-memory,10,
548,yarn.resourcemanager.delegation-token-renewer.thread-count,50,
549,yarn.resourcemanager.delegation.key.update-interval,86400000,
550,yarn.resourcemanager.delegation.token.max-lifetime,604800000,
551,yarn.resourcemanager.delegation.token.renew-interval,86400000,
552,yarn.resourcemanager.delegation-token-renewer.thread-retry-max-attempts,10,
553,yarn.resourcemanager.history-writer.multi-threaded-dispatcher.pool-size,10,
554,yarn.resourcemanager.nm-tokens.master-key-rolling-interval-secs,86400,
555,yarn.resourcemanager.reservation-system.planfollower.time-step,1000,
556,yarn.resourcemanager.rm.container-allocation.expiry-interval-ms,600000,
557,yarn.nodemanager.container-manager.thread-count,20,
558,yarn.nodemanager.collector-service.thread-count,5,
559,yarn.nodemanager.delete.thread-count,4,
560,yarn.nodemanager.container-executor.exit-code-file.timeout-ms,2000,
561,yarn.nodemanager.opportunistic-containers-max-queue-length,0,
562,yarn.nodemanager.delete.debug-delay-sec,0,
563,yarn.nodemanager.local-cache.max-files-per-directory,8192,
564,yarn.nodemanager.localizer.cache.cleanup.interval-ms,600000,
565,yarn.nodemanager.localizer.cache.target-size-mb,10240,
566,yarn.nodemanager.localizer.client.thread-count,5,
567,yarn.nodemanager.localizer.fetch.thread-count,4,
568,yarn.nodemanager.default-container-executor.log-dirs.permissions,710,
569,yarn.log-aggregation.debug.filesize,104857600,
570,yarn.log-aggregation-status.time-out.ms,600000,
571,yarn.nodemanager.log.retain-seconds,10800,
572,yarn.nodemanager.resource.memory.cgroups.swappiness,0,
573,yarn.nodemanager.logaggregation.threadpool-size-max,100,
574,yarn.nodemanager.resource.percentage-physical-cpu-limit,100,
575,yarn.nodemanager.resource-monitor.interval-ms,3000,
576,yarn.nodemanager.container-log-monitor.interval-ms,60000,
577,yarn.nodemanager.container-log-monitor.dir-size-limit-bytes,1000000000,
578,yarn.nodemanager.container-log-monitor.total-size-limit-bytes,10000000000,
579,yarn.nodemanager.health-checker.timeout-ms,1200000,
580,yarn.nodemanager.health-checker.interval-ms,600000,
581,yarn.nodemanager.disk-health-checker.interval-ms,120000,
582,yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb,0,
583,yarn.nodemanager.disk-health-checker.min-free-space-per-disk-watermark-high-mb,0,
584,yarn.nodemanager.linux-container-executor.cgroups.delete-delay-ms,20,
585,yarn.nodemanager.runtime.linux.docker.userremapping-uid-threshold,1,
586,yarn.nodemanager.runtime.linux.docker.userremapping-gid-threshold,1,
587,yarn.nodemanager.runtime.linux.docker.stop.grace-period,10,
588,yarn.nodemanager.runtime.linux.runc.layer-mounts-to-keep,100,
589,yarn.nodemanager.runtime.linux.runc.layer-mounts-interval-secs,600,
590,yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.cache-refresh-interval-secs,60,
591,yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.num-manifests-to-cache,10,
592,yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-timeout-interval-secs,360,
593,yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-size,500,
594,yarn.nodemanager.linux-container-executor.cgroups.delete-timeout-ms,1000,
595,yarn.nodemanager.aux-services.manifest.reload-ms,0,
596,yarn.nodemanager.sleep-delay-before-sigkill.ms,250,
597,yarn.nodemanager.process-kill-wait.ms,5000,
598,yarn.nodemanager.container-diagnostics-maximum-size,10000,
599,yarn.nodemanager.container-retry-minimum-interval-ms,1000,
600,yarn.client.nodemanager-client-async.thread-pool-max-size,500,
601,yarn.client.nodemanager-connect.max-wait-ms,180000,
602,yarn.client.nodemanager-connect.retry-interval-ms,10000,
603,yarn.client.max-cached-nodemanagers-proxies,0,
604,yarn.nodemanager.recovery.compaction-interval-secs,3600,
605,yarn.nodemanager.container-metrics.unregister-delay-ms,10000,
606,yarn.nodemanager.log.deletion-threads-count,4,
607,yarn.resourcemanager.proxy.connection.timeout,60000,
608,yarn.timeline-service.generic-application-history.max-applications,10000,
609,yarn.timeline-service.ttl-ms,604800000,
610,yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms,300000,
611,yarn.timeline-service.leveldb-timeline-store.read-cache-size,104857600,
612,yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size,10000,
613,yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size,10000,
614,yarn.timeline-service.handler-thread-count,10,
615,yarn.timeline-service.client.max-retries,30,
616,yarn.timeline-service.client.retry-interval-ms,1000,
617,yarn.timeline-service.client.drain-entities.timeout.ms,2000,
618,yarn.timeline-service.entity-group-fs-store.scan-interval-seconds,60,
619,yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds,3600,
620,yarn.timeline-service.entity-group-fs-store.retain-seconds,604800,
621,yarn.timeline-service.entity-group-fs-store.leveldb-cache-read-cache-size,10485760,
622,yarn.timeline-service.entity-group-fs-store.app-cache-size,10,
623,yarn.timeline-service.client.fd-flush-interval-secs,10,
624,yarn.timeline-service.client.fd-clean-interval-secs,60,
625,yarn.timeline-service.client.fd-retain-secs,300,
626,yarn.timeline-service.client.internal-timers-ttl-secs,420,
627,yarn.timeline-service.writer.flush-interval-seconds,60,
628,yarn.timeline-service.writer.async.queue.capacity,100,
629,yarn.timeline-service.app-collector.linger-period.ms,60000,
630,yarn.timeline-service.timeline-client.number-of-async-entities-to-merge,10,
631,yarn.timeline-service.hbase.coprocessor.app-final-value-retention-milliseconds,259200000,
632,yarn.timeline-service.app-aggregation-interval-secs,15,
633,yarn.timeline-service.flowname.max-size,0,
634,yarn.sharedcache.nested-level,3,
635,yarn.sharedcache.store.in-memory.staleness-period-mins,10080,
636,yarn.sharedcache.store.in-memory.initial-delay-mins,10,
637,yarn.sharedcache.store.in-memory.check-period-mins,720,
638,yarn.sharedcache.admin.thread-count,1,
639,yarn.sharedcache.cleaner.period-mins,1440,
640,yarn.sharedcache.cleaner.initial-delay-mins,10,
641,yarn.sharedcache.cleaner.resource-sleep-ms,0,
642,yarn.sharedcache.uploader.server.thread-count,50,
643,yarn.sharedcache.client-server.thread-count,50,
644,yarn.sharedcache.nm.uploader.replication.factor,10,
645,yarn.sharedcache.nm.uploader.thread-count,20,
646,yarn.minicluster.yarn.nodemanager.resource.memory-mb,4096,
647,yarn.nodemanager.node-labels.provider.fetch-interval-ms,600000,
648,yarn.nodemanager.node-labels.resync-interval-ms,120000,
649,yarn.nodemanager.node-labels.provider.fetch-timeout-ms,1200000,
650,yarn.resourcemanager.node-labels.provider.fetch-interval-ms,1800000,
651,yarn.nodemanager.node-attributes.provider.fetch-interval-ms,600000,
652,yarn.nodemanager.node-attributes.provider.fetch-timeout-ms,1200000,
653,yarn.nodemanager.node-attributes.resync-interval-ms,120000,
654,yarn.resourcemanager.nodemanager-graceful-decommission-timeout-secs,3600,
655,yarn.resourcemanager.decommissioning-nodes-watcher.poll-interval-secs,20,
656,yarn.federation.cache-ttl.secs,300,
657,yarn.client.application-client-protocol.poll-interval-ms,200,
658,yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds.min,3600,
659,yarn.nodemanager.log-aggregation.num-log-files-per-app,30,
660,yarn.cluster.max-application-priority,0,
661,yarn.nodemanager.amrmproxy.client.thread-count,25,
662,yarn.resourcemanager.opportunistic-container-allocation.nodes-used,10,
663,yarn.resourcemanager.nm-container-queuing.sorting-nodes-interval-ms,1000,
664,yarn.resourcemanager.nm-container-queuing.min-queue-length,5,
665,yarn.resourcemanager.nm-container-queuing.max-queue-length,15,
666,yarn.resourcemanager.nm-container-queuing.min-queue-wait-time-ms,10,
667,yarn.resourcemanager.nm-container-queuing.max-queue-wait-time-ms,100,
668,yarn.nodemanager.container.stderr.tail.bytes,4096,
669,yarn.resourcemanager.node-removal-untracked.timeout-ms,60000,
670,yarn.resourcemanager.application-timeouts.monitor.interval-ms,3000,
671,yarn.app.attempt.diagnostics.limit.kc,64,
672,yarn.router.interceptor.user.threadpool-size,5,
673,yarn.router.pipeline.cache-max-size,25,
674,yarn.scheduler.configuration.leveldb-store.compaction-interval-secs,86400,
675,yarn.scheduler.configuration.store.max-logs,1000,
676,yarn.scheduler.configuration.max.version,100,
677,yarn.nodemanager.elastic-memory-control.timeout-sec,5,
678,yarn.resourcemanager.activities-manager.cleanup-interval-ms,5000,
679,yarn.resourcemanager.activities-manager.scheduler-activities.ttl-ms,600000,
680,yarn.resourcemanager.activities-manager.app-activities.ttl-ms,600000,
681,yarn.resourcemanager.activities-manager.app-activities.max-queue-length,100,
682,yarn.resourcemanager.submission-preprocessor.file-refresh-interval-ms,60000,
683,yarn.resourcemanager.application.max-tags,10,
684,yarn.resourcemanager.application.max-tag.length,100,
